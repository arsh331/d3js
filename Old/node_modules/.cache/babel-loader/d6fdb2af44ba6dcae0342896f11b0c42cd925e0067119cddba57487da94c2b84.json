{"ast":null,"code":"var _jsxFileName = \"/gsoc/git/d3js/src/artist-search/Test.tsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Test = () => {\n  const searchQuery = \"The Beatles\";\n  const UNDEFINED_PROPERTY = \"Unknown\";\n  const LOOKUP_URL = `http://musicbrainz.org/ws/2/artist/?query=artist:${searchQuery}&fmt=json`;\n  let resultsArray = [];\n  // Fetches the artists from the MusicBrainz API\n  /*const fetchData = async(): Promise<void> => {\n      try {\n          const response = await fetch(LOOKUP_URL);\n          const data = await response.json();\n          processData(data);\n          console.log(data);   \n      }\n      catch(error){\n          alert(error);\n      }\n  }\n      \n  const processData = (dataResponse: ArtistLookupResponseType): void => {   \n      resultsArray = dataResponse.artists.map((artist) => {\n          return {\n              id: artist.id ?? UNDEFINED_PROPERTY,\n              type: artist.type ?? UNDEFINED_PROPERTY,\n              name: artist.name ?? UNDEFINED_PROPERTY,\n              country: artist.country ?? UNDEFINED_PROPERTY,\n          };\n      });\n  }\n  fetchData();\n  */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_c = Test;\nexport default Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Test","searchQuery","UNDEFINED_PROPERTY","LOOKUP_URL","resultsArray","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/gsoc/git/d3js/src/artist-search/Test.tsx"],"sourcesContent":["import React from \"react\";\nimport ArtistLookup, { ArtistType } from \"./ArtistLookup\";\nimport { ArtistLookupResponseType } from \"./ArtistLookup\";\nconst Test = () => {\n    const searchQuery = \"The Beatles\";\n    const UNDEFINED_PROPERTY = \"Unknown\";\n    const LOOKUP_URL = `http://musicbrainz.org/ws/2/artist/?query=artist:${searchQuery}&fmt=json`;\n    let resultsArray: Array<ArtistType> = [];\n    // Fetches the artists from the MusicBrainz API\n    /*const fetchData = async(): Promise<void> => {\n        try {\n            const response = await fetch(LOOKUP_URL);\n            const data = await response.json();\n            processData(data);\n            console.log(data);   \n        }\n        catch(error){\n            alert(error);\n        }\n    }\n        \n    const processData = (dataResponse: ArtistLookupResponseType): void => {   \n        resultsArray = dataResponse.artists.map((artist) => {\n            return {\n                id: artist.id ?? UNDEFINED_PROPERTY,\n                type: artist.type ?? UNDEFINED_PROPERTY,\n                name: artist.name ?? UNDEFINED_PROPERTY,\n                country: artist.country ?? UNDEFINED_PROPERTY,\n            };\n        });\n    }\n    fetchData();\n    */\n\n    \n    return (\n        <div>\n            <p>Test</p>\n        </div>\n    );    \n}\nexport default Test;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG1B,MAAMC,IAAI,GAAGA,CAAA,KAAM;EACf,MAAMC,WAAW,GAAG,aAAa;EACjC,MAAMC,kBAAkB,GAAG,SAAS;EACpC,MAAMC,UAAU,GAAI,oDAAmDF,WAAY,WAAU;EAC7F,IAAIG,YAA+B,GAAG,EAAE;EACxC;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAGI,oBACIL,OAAA;IAAAM,QAAA,eACIN,OAAA;MAAAM,QAAA,EAAG;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEd,CAAC;AAAAC,EAAA,GArCKV,IAAI;AAsCV,eAAeA,IAAI;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}