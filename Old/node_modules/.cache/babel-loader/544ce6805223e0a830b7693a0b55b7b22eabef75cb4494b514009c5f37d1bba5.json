{"ast":null,"code":"var _jsxFileName = \"/gsoc/git/d3js/src/Data.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Graph from \"./Graph\";\nimport Input from \"./Input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nArray.prototype.scaleBetween = function (scaledMin, scaledMax, num) {\n  var max = Math.max.apply(Math, this);\n  var min = Math.min.apply(Math, this);\n  return (scaledMax - scaledMin) * (num - min) / (max - min) + scaledMin;\n};\nconst colorGenerator = numOfColors => {\n  var red = Math.floor(Math.random() * 256);\n  var green = Math.floor(Math.random() * 256);\n  var blue = Math.floor(Math.random() * 256);\n  var max = Math.max(Math.max(red, Math.max(green, blue)), 1);\n  var step = 255 / (max * 5);\n  var colors = [];\n  for (var i = 1; i <= numOfColors; i++) {\n    var opacity = 1.0;\n    if (i === numOfColors) opacity = 0.2;\n    colors.push(\"rgba(\" + Math.floor(red * i * step) + \",\" + Math.floor(green * i * step) + \",\" + Math.floor(blue * i * step) + \", \" + opacity + \")\");\n  }\n  return colors;\n};\nconst Data = () => {\n  _s();\n  const LIMIT_VALUE = 18;\n  const NUM_OF_COLORS = 5;\n  var artist_mbid = \"8f6bd1e4-fbe1-4f50-aa9b-94c450ec0f11\";\n  var url = \"https://labs.api.listenbrainz.org/similar-artists/json?algorithm=session_based_days_7500_session_300_contribution_5_threshold_10_limit_100_filter_True_skip_30&artist_mbid=\";\n  const [similarArtists, setSimilarArtists] = useState([]);\n  const [artist, setArtist] = useState(\"\");\n  const [limit, setLimit] = useState(LIMIT_VALUE);\n  const [colors, setColors] = useState([]);\n  var transformedArtists = {};\n  var maxScore = 0;\n  const fetchData = artist_mbid => {\n    fetch(url + artist_mbid).then(response => response.json()).then(data => setData(data));\n  };\n  const setData = data => {\n    setArtist(data[1]);\n    setSimilarArtists(data[3]);\n  };\n  useEffect(() => {\n    fetchData(artist_mbid);\n    setColors(colorGenerator(NUM_OF_COLORS));\n  }, []);\n  var scoreList = [];\n  var artistList = similarArtists && similarArtists.data && similarArtists.data.map(artist => artist);\n  artistList = artistList && artistList.splice(0, limit);\n  var mainArtist = artist && artist.data && artist.data[0];\n  artistList && artistList.push(mainArtist);\n  transformedArtists = artistList && {\n    \"nodes\": artistList.map((artist, index) => {\n      //artist.score && scoreList.push(artist.score);\n      if (artist.score > maxScore) maxScore = artist.score;\n      return {\n        \"id\": artist.name,\n        \"artist_mbid\": artist.artist_mbid,\n        \"size\": artist.artist_mbid === mainArtist.artist_mbid ? 150 : 85,\n        \"color\": artist.artist_mbid === mainArtist.artist_mbid ? colors[0] : index < limit / 3 ? colors[1] : index < limit / 3 * 2 ? colors[2] : colors[3],\n        \"seed\": artist.artist_mbid === mainArtist.artist_mbid ? 1 : 0,\n        \"score\": artist.score\n      };\n    }),\n    \"links\": artistList.map((artist, index) => {\n      var computedScore = 1.0 - Math.sqrt(artist.score) / Math.sqrt(maxScore);\n      console.log(computedScore);\n      console.log(computedScore * 5000);\n      return {\n        \"source\": mainArtist.name,\n        \"target\": artist.name,\n        \"distance\": artist.artist_mbid != mainArtist.artist_mbid ? /*scoreList.scaleBetween(300, 100, Math.sqrt(artist.score))*/computedScore * 100 : 0,\n        \"strength\": artist.score < 5000 ? 2 : artist.score < 6000 ? 4 : 8\n      };\n    })\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      fetchData: fetchData,\n      setLimit: setLimit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Graph, {\n      data: transformedArtists,\n      fetchData: fetchData,\n      backgroundColor: colors[4]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n};\n_s(Data, \"PchWAY3sM6G7datJJcehhCQUkn8=\");\n_c = Data;\nexport default Data;\nvar _c;\n$RefreshReg$(_c, \"Data\");","map":{"version":3,"names":["React","useState","useEffect","Graph","Input","jsxDEV","_jsxDEV","Array","prototype","scaleBetween","scaledMin","scaledMax","num","max","Math","apply","min","colorGenerator","numOfColors","red","floor","random","green","blue","step","colors","i","opacity","push","Data","_s","LIMIT_VALUE","NUM_OF_COLORS","artist_mbid","url","similarArtists","setSimilarArtists","artist","setArtist","limit","setLimit","setColors","transformedArtists","maxScore","fetchData","fetch","then","response","json","data","setData","scoreList","artistList","map","splice","mainArtist","index","score","name","computedScore","sqrt","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","backgroundColor","_c","$RefreshReg$"],"sources":["/gsoc/git/d3js/src/Data.js"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport Graph from \"./Graph\";\nimport Input from \"./Input\";\n\nArray.prototype.scaleBetween = function(scaledMin, scaledMax, num) {\n    var max = Math.max.apply(Math, this);\n    var min = Math.min.apply(Math, this);\n    return ((scaledMax-scaledMin)*(num-min)/(max-min)+scaledMin);\n}\n\nconst colorGenerator = (numOfColors) => {\n    var red = Math.floor(Math.random() * 256);\n    var green = Math.floor(Math.random() * 256);\n    var blue  = Math.floor(Math.random() * 256);\n    var max = Math.max(Math.max(red, Math.max(green,blue)), 1);\n    var step = 255 / (max * 5);\n    var colors = [];\n\n    for(var i = 1; i <= numOfColors; i++){\n        var opacity = 1.0;\n        if(i === numOfColors)\n            opacity = 0.2;\n        colors.push(\"rgba(\" + Math.floor(red * i * step) + \",\" + Math.floor(green * i * step) + \",\" + Math.floor(blue * i * step) + \", \" + opacity +\")\");\n    }\n    \n    return colors;\n    \n}\n\nconst Data = () => {\n    const LIMIT_VALUE = 18;\n    const NUM_OF_COLORS = 5;\n    var artist_mbid = \"8f6bd1e4-fbe1-4f50-aa9b-94c450ec0f11\";\n    var url = \"https://labs.api.listenbrainz.org/similar-artists/json?algorithm=session_based_days_7500_session_300_contribution_5_threshold_10_limit_100_filter_True_skip_30&artist_mbid=\";\n    const [similarArtists, setSimilarArtists] = useState([]);\n    const [artist, setArtist] = useState(\"\");\n    const [limit, setLimit] = useState(LIMIT_VALUE);\n    const [colors, setColors] = useState([]);\n    var transformedArtists = {};\n    var maxScore = 0;\n    \n    const fetchData = (artist_mbid) => {\n        fetch(url + artist_mbid)\n        .then((response) => response.json())\n        .then((data) => setData(data))   \n    }\n    \n    const setData = (data) => {\n        setArtist(data[1]);\n        setSimilarArtists(data[3]);\n    }\n    \n    useEffect(() => {\n        fetchData(artist_mbid);\n        setColors(colorGenerator(NUM_OF_COLORS));\n    }, []);\n\n    var scoreList = [];  \n    var artistList = similarArtists && similarArtists.data && (similarArtists.data.map((artist) => artist));\n    artistList = artistList && artistList.splice(0, limit);\n    var mainArtist = artist && artist.data && artist.data[0];\n    artistList && artistList.push(mainArtist);\n   \n    transformedArtists = artistList && {\n        \"nodes\": artistList.map((artist, index) => {\n            //artist.score && scoreList.push(artist.score);\n            if(artist.score > maxScore)\n                maxScore = artist.score;\n            return {\n                \"id\": artist.name,\n                \"artist_mbid\": artist.artist_mbid,\n                \"size\": artist.artist_mbid === mainArtist.artist_mbid ? 150 : 85,\n                \"color\": artist.artist_mbid === mainArtist.artist_mbid ? colors[0] : index < limit/3 ? colors[1] : index < limit/3*2 ? colors[2] : colors[3],\n                \"seed\": artist.artist_mbid === mainArtist.artist_mbid ? 1 : 0,\n                \"score\": artist.score\n            };\n        }),\n        \"links\": artistList.map((artist, index) => {\n            var computedScore = 1.0 - (Math.sqrt(artist.score) / Math.sqrt(maxScore));\n            console.log(computedScore);\n            console.log(computedScore * 5000);\n            return {\n                \"source\": mainArtist.name,\n                \"target\": artist.name,\n                \"distance\": (artist.artist_mbid != mainArtist.artist_mbid ? /*scoreList.scaleBetween(300, 100, Math.sqrt(artist.score))*/ computedScore * 100 : 0),\n                \"strength\": artist.score < 5000 ? 2 : artist.score < 6000 ? 4 : 8,\n                };\n        }),\n    }\n    \n    return (\n        <div>\n            <Input fetchData={fetchData} setLimit={setLimit}/>\n            <Graph data={transformedArtists} fetchData={fetchData} backgroundColor={colors[4]}/>\n        </div>\n    );\n}\n\nexport default Data;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}