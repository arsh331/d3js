{"ast":null,"code":"var _jsxFileName = \"/gsoc/git/d3js/src/artist-search/Test.tsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Test = () => {\n  const searchQuery = \"The Beatles\";\n  const UNDEFINED_PROPERTY = \"Unknown\";\n  const LOOKUP_URL = `http://musicbrainz.org/ws/2/artist/?query=artist:${searchQuery}&fmt=json`;\n  let resultsArray = [];\n  // Fetches the artists from the MusicBrainz API\n  async () => {\n    try {\n      const response = await fetch(LOOKUP_URL);\n      const data = await response.json();\n      processData(data);\n      console.log(data);\n    } catch (error) {\n      alert(error);\n    }\n  };\n  const processData = dataResponse => {\n    resultsArray = dataResponse.artists.map(artist => {\n      var _artist$id, _artist$type, _artist$name, _artist$country;\n      return {\n        id: (_artist$id = artist.id) !== null && _artist$id !== void 0 ? _artist$id : UNDEFINED_PROPERTY,\n        type: (_artist$type = artist.type) !== null && _artist$type !== void 0 ? _artist$type : UNDEFINED_PROPERTY,\n        name: (_artist$name = artist.name) !== null && _artist$name !== void 0 ? _artist$name : UNDEFINED_PROPERTY,\n        country: (_artist$country = artist.country) !== null && _artist$country !== void 0 ? _artist$country : UNDEFINED_PROPERTY\n      };\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_c = Test;\nexport default Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Test","searchQuery","UNDEFINED_PROPERTY","LOOKUP_URL","resultsArray","response","fetch","data","json","processData","console","log","error","alert","dataResponse","artists","map","artist","_artist$id","_artist$type","_artist$name","_artist$country","id","type","name","country","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/gsoc/git/d3js/src/artist-search/Test.tsx"],"sourcesContent":["import React from \"react\";\nimport ArtistLookup, { ArtistType } from \"./ArtistLookup\";\nimport { ArtistLookupResponseType } from \"./ArtistLookup\";\nconst Test = () => {\n    const searchQuery = \"The Beatles\";\n    const UNDEFINED_PROPERTY = \"Unknown\";\n    const LOOKUP_URL = `http://musicbrainz.org/ws/2/artist/?query=artist:${searchQuery}&fmt=json`;\n    let resultsArray: Array<ArtistType> = [];\n    // Fetches the artists from the MusicBrainz API\n    async(): Promise<void> => {\n        try {\n            const response = await fetch(LOOKUP_URL);\n            const data = await response.json();\n            processData(data);\n            console.log(data);   \n        }\n        catch(error){\n            alert(error);\n        }\n    }\n        \n    const processData = (dataResponse: ArtistLookupResponseType): void => {   \n        resultsArray = dataResponse.artists.map((artist) => {\n            return {\n                id: artist.id ?? UNDEFINED_PROPERTY,\n                type: artist.type ?? UNDEFINED_PROPERTY,\n                name: artist.name ?? UNDEFINED_PROPERTY,\n                country: artist.country ?? UNDEFINED_PROPERTY,\n            };\n        });\n    }\n\n    return (\n        <div>\n            <p>Test</p>\n        </div>\n    );    \n}\nexport default Test;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG1B,MAAMC,IAAI,GAAGA,CAAA,KAAM;EACf,MAAMC,WAAW,GAAG,aAAa;EACjC,MAAMC,kBAAkB,GAAG,SAAS;EACpC,MAAMC,UAAU,GAAI,oDAAmDF,WAAY,WAAU;EAC7F,IAAIG,YAA+B,GAAG,EAAE;EACxC;EACA,YAA0B;IACtB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,UAAU,CAAC;MACxC,MAAMI,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCC,WAAW,CAACF,IAAI,CAAC;MACjBG,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;IACrB,CAAC,CACD,OAAMK,KAAK,EAAC;MACRC,KAAK,CAACD,KAAK,CAAC;IAChB;EACJ,CAAC;EAED,MAAMH,WAAW,GAAIK,YAAsC,IAAW;IAClEV,YAAY,GAAGU,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;MAAA,IAAAC,UAAA,EAAAC,YAAA,EAAAC,YAAA,EAAAC,eAAA;MAChD,OAAO;QACHC,EAAE,GAAAJ,UAAA,GAAED,MAAM,CAACK,EAAE,cAAAJ,UAAA,cAAAA,UAAA,GAAIhB,kBAAkB;QACnCqB,IAAI,GAAAJ,YAAA,GAAEF,MAAM,CAACM,IAAI,cAAAJ,YAAA,cAAAA,YAAA,GAAIjB,kBAAkB;QACvCsB,IAAI,GAAAJ,YAAA,GAAEH,MAAM,CAACO,IAAI,cAAAJ,YAAA,cAAAA,YAAA,GAAIlB,kBAAkB;QACvCuB,OAAO,GAAAJ,eAAA,GAAEJ,MAAM,CAACQ,OAAO,cAAAJ,eAAA,cAAAA,eAAA,GAAInB;MAC/B,CAAC;IACL,CAAC,CAAC;EACN,CAAC;EAED,oBACIH,OAAA;IAAA2B,QAAA,eACI3B,OAAA;MAAA2B,QAAA,EAAG;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEd,CAAC;AAAAC,EAAA,GAlCK/B,IAAI;AAmCV,eAAeA,IAAI;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}