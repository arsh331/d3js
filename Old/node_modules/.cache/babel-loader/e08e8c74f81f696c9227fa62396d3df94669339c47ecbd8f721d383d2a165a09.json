{"ast":null,"code":"var _jsxFileName = \"/gsoc/git/d3js/src/Graph.tsx\";\nimport React from 'react';\nimport { ResponsiveNetwork } from '@nivo/network';\nimport { animated, to } from '@react-spring/web';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Graph = props => {\n  console.log(props.data);\n  const CustomNodeComponent = _ref => {\n    let {\n      node,\n      animated: animatedProps,\n      onClick,\n      onMouseEnter,\n      onMouseMove,\n      onMouseLeave\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(animated.g, {\n      transform: to([animatedProps.x, animatedProps.y, animatedProps.scale], (x, y, scale) => {\n        return `translate(${x},${y}) scale(${scale})`;\n      }),\n      onClick: onClick ? event => onClick(node, event) : undefined,\n      onMouseEnter: onMouseEnter ? event => onMouseEnter(node, event) : undefined,\n      onMouseMove: onMouseMove ? event => onMouseMove(node, event) : undefined,\n      onMouseLeave: onMouseLeave ? event => onMouseLeave(node, event) : undefined,\n      width: to([animatedProps.size], size => size / 2),\n      height: to([animatedProps.size], size => size / 2),\n      children: [/*#__PURE__*/_jsxDEV(animated.circle, {\n        \"data-testid\": `node.${node.id}`,\n        r: to([animatedProps.size], size => size / 2),\n        fill: animatedProps.color,\n        strokeWidth: animatedProps.borderWidth,\n        stroke: animatedProps.borderColor,\n        opacity: animatedProps.opacity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(animated.text, {\n        textAnchor: \"middle\",\n        alignmentBaseline: \"middle\",\n        children: node.id.length > 10 ? node.id.slice(0, 6) + '...' : node.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this);\n  };\n  const CustomNodeTooltipComponent = _ref2 => {\n    let {\n      node\n    } = _ref2;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        background: node.color,\n        color: '#000000',\n        padding: '9px 12px',\n        borderRadius: 'px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [\"Name: \", node.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), node.data.score && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Score: \", node.data.score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 36\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this);\n  };\n  const chartProperties = {\n    data: props.data,\n    height: 1000,\n    width: 1000,\n    repulsivity: 200,\n    iterations: 120,\n    centeringStrength: 0.1,\n    nodeBorderWidth: 5,\n    nodeColor: node => node.color,\n    linkThickness: 2,\n    linkColor: {\n      from: 'source.color',\n      modifiers: []\n    },\n    linkDistance: node => node.distance,\n    nodeSize: node => node.size,\n    activeNodeSize: node => node.size * 1.2,\n    inactiveNodeSize: node => node.size / 1.2,\n    isInteractive: true,\n    onClick: node => props.fetchData(node.data.artist_mbid)\n  };\n  return props.data ? /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '1000px'\n    },\n    children: /*#__PURE__*/_jsxDEV(ResponsiveNetwork, {\n      ...chartProperties,\n      nodeComponent: CustomNodeComponent,\n      nodeTooltip: CustomNodeTooltipComponent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Please wait...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this);\n};\n_c = Graph;\nexport default Graph;\nvar _c;\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"names":["React","ResponsiveNetwork","animated","to","jsxDEV","_jsxDEV","Graph","props","console","log","data","CustomNodeComponent","_ref","node","animatedProps","onClick","onMouseEnter","onMouseMove","onMouseLeave","g","transform","x","y","scale","event","undefined","width","size","height","children","circle","id","r","fill","color","strokeWidth","borderWidth","stroke","borderColor","opacity","fileName","_jsxFileName","lineNumber","columnNumber","text","textAnchor","alignmentBaseline","length","slice","CustomNodeTooltipComponent","_ref2","style","background","padding","borderRadius","score","chartProperties","repulsivity","iterations","centeringStrength","nodeBorderWidth","nodeColor","linkThickness","linkColor","from","modifiers","linkDistance","distance","nodeSize","activeNodeSize","inactiveNodeSize","isInteractive","fetchData","artist_mbid","nodeComponent","nodeTooltip","_c","$RefreshReg$"],"sources":["/gsoc/git/d3js/src/Graph.tsx"],"sourcesContent":["import React, {useState} from 'react';\nimport { ResponsiveNetwork, NodeProps, LinkProps, NodeTooltipProps, NetworkSvgProps } from '@nivo/network';\nimport { animated, to } from '@react-spring/web';\nimport { InputNode } from '@nivo/network';\ninterface GraphProps {\n    data: any;\n    fetchData: Function;\n}\n\nconst Graph = (props: GraphProps) => {\n    console.log(props.data);\n    type Node = (typeof props.data)['nodes'][number];\n    type Link = (typeof props.data)['links'][number];\n    \n    const CustomNodeComponent = <Node extends InputNode>({\n        node,\n        animated: animatedProps,\n        onClick,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n    }: NodeProps<Node>) => (\n        <animated.g \n        transform={to([animatedProps.x, animatedProps.y, animatedProps.scale], (x, y, scale) => {\n            return `translate(${x},${y}) scale(${scale})`\n        })}\n        onClick={onClick ? event => onClick(node, event) : undefined}\n        onMouseEnter={onMouseEnter ? event => onMouseEnter(node, event) : undefined}\n        onMouseMove={onMouseMove ? event => onMouseMove(node, event) : undefined}\n        onMouseLeave={onMouseLeave ? event => onMouseLeave(node, event) : undefined}\n        width={to([animatedProps.size], size => size / 2)}\n        height={to([animatedProps.size], size => size / 2)}\n        >\n        <animated.circle\n            data-testid={`node.${node.id}`}\n            r={to([animatedProps.size], size => size / 2)}\n            fill={animatedProps.color}\n            strokeWidth={animatedProps.borderWidth}\n            stroke={animatedProps.borderColor}\n            opacity={animatedProps.opacity}\n        />\n        <animated.text \n        textAnchor='middle'\n        alignmentBaseline='middle'\n        >\n            {node.id.length > 10 ? node.id.slice(0, 6) + '...' : node.id}\n        </animated.text>\n        </animated.g>\n    )\n    \n    const CustomNodeTooltipComponent = ({ node }: NodeTooltipProps<Node>) => (\n        <div\n            style={{\n                background: node.color,\n                color: '#000000',\n                padding: '9px 12px',\n                borderRadius: 'px'\n            }}\n        >\n            <strong>Name: {node.id}</strong>\n            <br />\n            {\n                node.data.score && <p>Score: {node.data.score}</p>\n            }\n        </div>\n    )\n\n    const chartProperties: NetworkSvgProps<Node, Link> = {\n        data: props.data,\n        height: 1000,\n        width: 1000,\n        repulsivity: 200,\n        iterations: 120,\n        centeringStrength: 0.1,\n        nodeBorderWidth: 5,\n        nodeColor: node => node.color,\n        linkThickness: 2,\n        linkColor: { from: 'source.color', modifiers: [] },\n        linkDistance: node => node.distance,\n        nodeSize: node => node.size,\n        activeNodeSize: node => node.size * 1.2,\n        inactiveNodeSize: node => node.size / 1.2,\n        isInteractive: true,\n        onClick: node => props.fetchData(node.data.artist_mbid)\n    }\n    \n    return (\n        props.data ?\n        <div style={{ height: '1000px' }}>\n            <ResponsiveNetwork\n                {...chartProperties}\n                nodeComponent={CustomNodeComponent}\n                nodeTooltip={CustomNodeTooltipComponent}\n            />\n        </div>\n        :\n        <p>\n            Please wait...\n        </p>\n    );\n}\nexport default Graph;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}