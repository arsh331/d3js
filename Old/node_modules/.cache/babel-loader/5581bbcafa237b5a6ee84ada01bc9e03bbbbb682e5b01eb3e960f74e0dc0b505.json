{"ast":null,"code":"var _jsxFileName = \"/gsoc/git/d3js/src/artist-search/SearchBox.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport SearchDropdown from \"./SearchDropdown\";\nimport ArtistLookup from \"./ArtistLookup\";\nimport Form from \"react-bootstrap/Form\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport { Dropdown } from \"react-bootstrap/Dropdown\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SearchBox = props => {\n  _s();\n  // State to store the search results (list of artists)\n  const [searchResults, setSearchResults] = React.useState([]);\n  const [similarArtistsLimit, setsimilarArtistsLimit] = React.useState(props.currentsimilarArtistsLimit);\n  const [artistMbid, setArtistMbid] = React.useState(props.currentArtistMbid);\n\n  /*useEffect(() => {\n      if(searchQuery && searchQuery.trim() !== \"\"){\n          setSearchResults(ArtistLookup(searchQuery));\n      }\n      else{\n          setSearchResults([]);\n      }\n  }, [searchQuery]);\n  */\n\n  useEffect(() => {\n    props.onsimilarArtistsLimitChange(similarArtistsLimit);\n    props.onArtistChange(artistMbid);\n  }, [similarArtistsLimit, artistMbid]);\n\n  /*const setGraphsimilarArtistsLimit = (event: React.FormEvent<HTMLInputElement>): void => {\n      var similarArtistsLimit = event.currentTarget.value;\n      var similarArtistsLimitInt = parseInt(similarArtistsLimit);\n      setsimilarArtistsLimit(similarArtistsLimitInt);\n  }*/\n\n  /*return (\n      <form \n      autoComplete=\"off\"\n      style={\n          {\n              display: \"flex\", \n              flexDirection: \"row\",\n              justifyContent: \"left\",\n              height: \"4vh\",\n              padding: \"1vh\"\n          }\n      }\n      >\n          <div\n          style={\n              {\n                  height: \"4vh\",\n                  width: \"20vh\",\n              }\n          }\n          onClick={(e) => {const dd = document.getElementById(\"search-dropdown\"); dd?.style.display === \"flex\" && searchQuery ? dd.style.display = \"none\" : dd!.style.display = \"flex\";}}\n          >\n              <input id=\"artist-input\" style={{height: \"inherit\", width: \"inherit\"}} type=\"search\" name=\"artist_mbid\" placeholder=\"Artist name\" onChange={e => setSearchQuery(e.target.value)}/>   \n              <SearchDropdown searchResults={searchResults} onArtistChange={setArtist}/>\n          </div>\n          <input style={{height: \"auto\"}}type=\"number\" name=\"similarArtistsLimit\" placeholder=\"Graph size\" min=\"1\" max=\"25\" onChange={setGraphsimilarArtistsLimit} defaultValue={similarArtistsLimit}/>\n          <span className=\"validity\"></span>\n      </form>\n   );*/\n  // Lookup the artist based on the query\n  const handleQueryChange = event => {\n    let query = event.currentTarget.value;\n    if (query.trim() !== \"\") {\n      setSearchResults(ArtistLookup(query));\n    }\n  };\n  // Set similarArtistsLimit based on user input\n  const handlesimilarArtistsLimitChange = event => {\n    let similarArtistsLimit = event.currentTarget.value;\n    let similarArtistsLimitInt = parseInt(similarArtistsLimit);\n    setsimilarArtistsLimit(similarArtistsLimitInt);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n      children: /*#__PURE__*/_jsxDEV(InputGroup, {\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"search\",\n          placeholder: \"Artist Name\",\n          onChange: handleQueryChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SearchDropdown, {\n      searchResults: searchResults,\n      onArtistChange: props.onArtistChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n      children: /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"number\",\n        placeholder: \"Graph Size\",\n        min: \"1\",\n        max: \"25\",\n        onChange: handlesimilarArtistsLimitChange,\n        defaultValue: similarArtistsLimit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(SearchBox, \"M7xDTxgoademLgY4IJ+CM7qTbhg=\");\n_c = SearchBox;\nexport default SearchBox;\n//export type { ArtistType };\nvar _c;\n$RefreshReg$(_c, \"SearchBox\");","map":{"version":3,"names":["React","useEffect","SearchDropdown","ArtistLookup","Form","InputGroup","Dropdown","jsxDEV","_jsxDEV","Fragment","_Fragment","SearchBox","props","_s","searchResults","setSearchResults","useState","similarArtistsLimit","setsimilarArtistsLimit","currentsimilarArtistsLimit","artistMbid","setArtistMbid","currentArtistMbid","onsimilarArtistsLimitChange","onArtistChange","handleQueryChange","event","query","currentTarget","value","trim","handlesimilarArtistsLimitChange","similarArtistsLimitInt","parseInt","children","Toggle","Control","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","min","max","defaultValue","_c","$RefreshReg$"],"sources":["/gsoc/git/d3js/src/artist-search/SearchBox.tsx"],"sourcesContent":["import React, { useEffect, useMemo } from \"react\";\nimport SearchDropdown from \"./SearchDropdown\";\nimport ArtistLookup from \"./ArtistLookup\";\nimport { ArtistType } from \"./ArtistLookup\";\nimport Form from \"react-bootstrap/Form\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport { Dropdown } from \"react-bootstrap/Dropdown\";\ninterface SearchBoxProps {\n    currentsimilarArtistsLimit: number;\n    onsimilarArtistsLimitChange: (similarArtistsLimit: number) => void;\n    currentArtistMbid: string;\n    onArtistChange: (artist_mbid: string) => void;\n}\n\nconst SearchBox = (props: SearchBoxProps) => {\n    // State to store the search results (list of artists)\n    const [searchResults, setSearchResults] = React.useState<Array<ArtistType>>([]);\n\n    const [similarArtistsLimit, setsimilarArtistsLimit] = React.useState<number>(props.currentsimilarArtistsLimit);\n    const [artistMbid, setArtistMbid] = React.useState<string>(props.currentArtistMbid);\n\n    /*useEffect(() => {\n        if(searchQuery && searchQuery.trim() !== \"\"){\n            setSearchResults(ArtistLookup(searchQuery));\n        }\n        else{\n            setSearchResults([]);\n        }\n    }, [searchQuery]);\n    */\n   \n    useEffect(() => {\n        props.onsimilarArtistsLimitChange(similarArtistsLimit);\n        props.onArtistChange(artistMbid);\n    }, [similarArtistsLimit, artistMbid]);\n\n    /*const setGraphsimilarArtistsLimit = (event: React.FormEvent<HTMLInputElement>): void => {\n        var similarArtistsLimit = event.currentTarget.value;\n        var similarArtistsLimitInt = parseInt(similarArtistsLimit);\n        setsimilarArtistsLimit(similarArtistsLimitInt);\n    }*/\n\n    /*return (\n        <form \n        autoComplete=\"off\"\n        style={\n            {\n                display: \"flex\", \n                flexDirection: \"row\",\n                justifyContent: \"left\",\n                height: \"4vh\",\n                padding: \"1vh\"\n            }\n        }\n        >\n            <div\n            style={\n                {\n                    height: \"4vh\",\n                    width: \"20vh\",\n                }\n            }\n            onClick={(e) => {const dd = document.getElementById(\"search-dropdown\"); dd?.style.display === \"flex\" && searchQuery ? dd.style.display = \"none\" : dd!.style.display = \"flex\";}}\n            >\n                <input id=\"artist-input\" style={{height: \"inherit\", width: \"inherit\"}} type=\"search\" name=\"artist_mbid\" placeholder=\"Artist name\" onChange={e => setSearchQuery(e.target.value)}/>   \n                <SearchDropdown searchResults={searchResults} onArtistChange={setArtist}/>\n            </div>\n            <input style={{height: \"auto\"}}type=\"number\" name=\"similarArtistsLimit\" placeholder=\"Graph size\" min=\"1\" max=\"25\" onChange={setGraphsimilarArtistsLimit} defaultValue={similarArtistsLimit}/>\n            <span className=\"validity\"></span>\n        </form>\n\n    );*/\n    // Lookup the artist based on the query\n    const handleQueryChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n        let query = event.currentTarget.value;\n        if(query.trim() !== \"\") {\n        setSearchResults(ArtistLookup(query));\n        }\n    }\n    // Set similarArtistsLimit based on user input\n    const handlesimilarArtistsLimitChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n        let similarArtistsLimit = event.currentTarget.value;\n        let similarArtistsLimitInt = parseInt(similarArtistsLimit);\n        setsimilarArtistsLimit(similarArtistsLimitInt);\n    }\n\n    return(\n        <>\n            <Dropdown.Toggle>\n            <InputGroup>\n                <Form.Control type=\"search\" placeholder=\"Artist Name\" onChange={handleQueryChange}/>\n            </InputGroup>\n            </Dropdown.Toggle>\n            <SearchDropdown searchResults={searchResults} onArtistChange={props.onArtistChange}/>\n            <InputGroup>\n                <Form.Control type=\"number\" placeholder=\"Graph Size\" min=\"1\" max=\"25\" onChange={handlesimilarArtistsLimitChange} defaultValue={similarArtistsLimit}/>\n            </InputGroup>\n        </>\n    );\n}\n\nexport default SearchBox;\n//export type { ArtistType };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}