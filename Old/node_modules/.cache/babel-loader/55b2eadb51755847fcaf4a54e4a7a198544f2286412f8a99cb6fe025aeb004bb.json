{"ast":null,"code":"var _jsxFileName = \"/gsoc/git/d3js/src/artist-search/SearchBox.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport SearchDropdown from \"./SearchDropdown\";\nimport ArtistLookup from \"./ArtistLookup\";\nimport { throttle } from \"lodash\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchBox = props => {\n  _s();\n  // State to store the search results (list of artists)\n  const [searchResults, setSearchResults] = React.useState([]);\n  const [searchQuery, setSearchQuery] = React.useState(\"\");\n  const [similarArtistsLimit, setsimilarArtistsLimit] = React.useState(props.currentsimilarArtistsLimit);\n  const [artistMbid, setArtistMbid] = React.useState(props.currentArtistMbid);\n  useEffect(() => {\n    if (searchQuery && searchQuery.trim() !== \"\") {\n      setSearchResults(ArtistLookup(searchQuery));\n    } else {\n      setSearchResults([]);\n    }\n  }, [searchQuery]);\n  useEffect(() => {\n    props.onsimilarArtistsLimitChange(similarArtistsLimit);\n    props.onArtistChange(artistMbid);\n  }, [similarArtistsLimit, artistMbid]);\n\n  /*const setGraphsimilarArtistsLimit = (event: React.FormEvent<HTMLInputElement>): void => {\n      var similarArtistsLimit = event.currentTarget.value;\n      var similarArtistsLimitInt = parseInt(similarArtistsLimit);\n      setsimilarArtistsLimit(similarArtistsLimitInt);\n  }*/\n  // Lookup the artist based on the query\n  const handleQueryChange = event => {\n    let query = event.currentTarget.value;\n    if (query.trim() !== \"\") {\n      var resultsArray = [];\n      const UNDEFINED_PROPERTY = \"Unknown\";\n      const LOOKUP_URL = `http://musicbrainz.org/ws/2/artist/?query=artist:${searchQuery}&fmt=json`;\n      // Fetches the artists from the MusicBrainz API\n\n      throttle(async () => {\n        try {\n          const response = await fetch(LOOKUP_URL);\n          const data = await response.json();\n          processData(data);\n        } catch (error) {\n          alert(error);\n        }\n      }, 800, {\n        leading: false,\n        trailing: true\n      });\n      const processData = dataResponse => {\n        resultsArray = dataResponse.artists.map(artist => {\n          var _artist$id, _artist$type, _artist$name, _artist$country;\n          return {\n            id: (_artist$id = artist.id) !== null && _artist$id !== void 0 ? _artist$id : UNDEFINED_PROPERTY,\n            type: (_artist$type = artist.type) !== null && _artist$type !== void 0 ? _artist$type : UNDEFINED_PROPERTY,\n            name: (_artist$name = artist.name) !== null && _artist$name !== void 0 ? _artist$name : UNDEFINED_PROPERTY,\n            country: (_artist$country = artist.country) !== null && _artist$country !== void 0 ? _artist$country : UNDEFINED_PROPERTY\n          };\n        });\n      };\n      setSearchResults(resultsArray);\n      console.log(searchResults);\n    }\n  };\n  // Set similarArtistsLimit based on user input\n  const handlesimilarArtistsLimitChange = event => {\n    let similarArtistsLimit = event.currentTarget.valueAsNumber;\n    setsimilarArtistsLimit(similarArtistsLimit);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    autoComplete: \"off\",\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"left\",\n      height: \"4vh\",\n      padding: \"1vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"4vh\",\n        width: \"20vh\"\n      },\n      onClick: e => {\n        const dd = document.getElementById(\"search-dropdown\");\n        (dd === null || dd === void 0 ? void 0 : dd.style.display) === \"flex\" ? dd.style.display = \"none\" : dd.style.display = \"flex\";\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"artist-input\",\n        style: {\n          height: \"inherit\",\n          width: \"inherit\"\n        },\n        type: \"search\",\n        name: \"artist_mbid\",\n        placeholder: \"Artist name\",\n        onChange: handleQueryChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SearchDropdown, {\n        searchResults: searchResults,\n        onArtistChange: setArtistMbid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      style: {\n        height: \"auto\"\n      },\n      type: \"number\",\n      name: \"similarArtistsLimit\",\n      placeholder: \"Graph size\",\n      min: \"1\",\n      max: \"25\",\n      onChange: handlesimilarArtistsLimitChange,\n      defaultValue: similarArtistsLimit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"validity\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n\n  /*return(\n      <>\n          <InputGroup>\n              <Form.Control type=\"search\" placeholder=\"Artist Name\" onChange={handleQueryChange}/>\n          </InputGroup>\n          <SearchDropdown searchResults={searchResults} onArtistChange={props.onArtistChange}/>\n          <InputGroup>\n              <Form.Control type=\"number\" placeholder=\"Graph Size\" min=\"1\" max=\"25\" onChange={handlesimilarArtistsLimitChange} defaultValue={similarArtistsLimit}/>\n          </InputGroup>\n      </>\n  );*/\n};\n_s(SearchBox, \"U00pHvwD2/Qh8c67ln7wXSa7N2k=\");\n_c = SearchBox;\nexport default SearchBox;\n//export type { ArtistType };\nvar _c;\n$RefreshReg$(_c, \"SearchBox\");","map":{"version":3,"names":["React","useEffect","SearchDropdown","ArtistLookup","throttle","jsxDEV","_jsxDEV","SearchBox","props","_s","searchResults","setSearchResults","useState","searchQuery","setSearchQuery","similarArtistsLimit","setsimilarArtistsLimit","currentsimilarArtistsLimit","artistMbid","setArtistMbid","currentArtistMbid","trim","onsimilarArtistsLimitChange","onArtistChange","handleQueryChange","event","query","currentTarget","value","resultsArray","UNDEFINED_PROPERTY","LOOKUP_URL","response","fetch","data","json","processData","error","alert","leading","trailing","dataResponse","artists","map","artist","_artist$id","_artist$type","_artist$name","_artist$country","id","type","name","country","console","log","handlesimilarArtistsLimitChange","valueAsNumber","autoComplete","style","display","flexDirection","justifyContent","height","padding","children","width","onClick","e","dd","document","getElementById","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","min","max","defaultValue","className","_c","$RefreshReg$"],"sources":["/gsoc/git/d3js/src/artist-search/SearchBox.tsx"],"sourcesContent":["import React, { useEffect, useMemo } from \"react\";\nimport SearchDropdown from \"./SearchDropdown\";\nimport ArtistLookup from \"./ArtistLookup\";\nimport { ArtistType } from \"./ArtistLookup\";\nimport { throttle } from \"lodash\";\ninterface SearchBoxProps {\n    currentsimilarArtistsLimit: number;\n    onsimilarArtistsLimitChange: (similarArtistsLimit: number) => void;\n    currentArtistMbid: string;\n    onArtistChange: (artist_mbid: string) => void;\n}\ntype ArtistLookupResponseType = {\n    created: string;\n    count: number;\n    offset: number;\n    artists: Array<ArtistType>;\n}\nconst SearchBox = (props: SearchBoxProps) => {\n    // State to store the search results (list of artists)\n    const [searchResults, setSearchResults] = React.useState<Array<ArtistType>>([]);\n    const [searchQuery, setSearchQuery] = React.useState<string>(\"\");\n    const [similarArtistsLimit, setsimilarArtistsLimit] = React.useState<number>(props.currentsimilarArtistsLimit);\n    const [artistMbid, setArtistMbid] = React.useState<string>(props.currentArtistMbid);\n\n    useEffect(() => {\n        if(searchQuery && searchQuery.trim() !== \"\"){\n            setSearchResults(ArtistLookup(searchQuery));\n        }\n        else{\n            setSearchResults([]);\n        }\n    }, [searchQuery]);\n    \n   \n    useEffect(() => {\n        props.onsimilarArtistsLimitChange(similarArtistsLimit);\n        props.onArtistChange(artistMbid);\n    }, [similarArtistsLimit, artistMbid]);\n\n    /*const setGraphsimilarArtistsLimit = (event: React.FormEvent<HTMLInputElement>): void => {\n        var similarArtistsLimit = event.currentTarget.value;\n        var similarArtistsLimitInt = parseInt(similarArtistsLimit);\n        setsimilarArtistsLimit(similarArtistsLimitInt);\n    }*/\n    // Lookup the artist based on the query\n    const handleQueryChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n        let query = event.currentTarget.value;\n        if(query.trim() !== \"\") {\n            var resultsArray: Array<ArtistType> = [];\n            const UNDEFINED_PROPERTY = \"Unknown\";\n            const LOOKUP_URL = `http://musicbrainz.org/ws/2/artist/?query=artist:${searchQuery}&fmt=json`;\n            // Fetches the artists from the MusicBrainz API\n        \n                throttle(\n                async(): Promise<void> => {\n                try {\n                    const response = await fetch(LOOKUP_URL);\n                    const data = await response.json();\n                    processData(data);   \n                }\n                catch(error){\n                    alert(error);\n                }\n            }, 800, {leading: false, trailing: true});\n            \n            const processData = (dataResponse: ArtistLookupResponseType): void => {   \n                resultsArray = dataResponse.artists.map((artist) => {\n                    return {\n                        id: artist.id ?? UNDEFINED_PROPERTY,\n                        type: artist.type ?? UNDEFINED_PROPERTY,\n                        name: artist.name ?? UNDEFINED_PROPERTY,\n                        country: artist.country ?? UNDEFINED_PROPERTY,\n                    };\n                });\n            }\n            \n            setSearchResults(resultsArray);\n        console.log(searchResults);\n        }\n    }\n    // Set similarArtistsLimit based on user input\n    const handlesimilarArtistsLimitChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n        let similarArtistsLimit = event.currentTarget.valueAsNumber;\n        setsimilarArtistsLimit(similarArtistsLimit);\n    }\n    return (\n        <form \n        autoComplete=\"off\"\n        style={\n            {\n                display: \"flex\", \n                flexDirection: \"row\",\n                justifyContent: \"left\",\n                height: \"4vh\",\n                padding: \"1vh\"\n            }\n        }\n        >\n            <div\n            style={\n                {\n                    height: \"4vh\",\n                    width: \"20vh\",\n                }\n            }\n            onClick={(e) => {const dd = document.getElementById(\"search-dropdown\"); dd?.style.display === \"flex\" ? dd.style.display = \"none\" : dd!.style.display = \"flex\";}}\n            >\n                <input id=\"artist-input\" style={{height: \"inherit\", width: \"inherit\"}} type=\"search\" name=\"artist_mbid\" placeholder=\"Artist name\" onChange={handleQueryChange}/>   \n                <SearchDropdown searchResults={searchResults} onArtistChange={setArtistMbid}/>\n            </div>\n            <input style={{height: \"auto\"}}type=\"number\" name=\"similarArtistsLimit\" placeholder=\"Graph size\" min=\"1\" max=\"25\" onChange={handlesimilarArtistsLimitChange} defaultValue={similarArtistsLimit}/>\n            <span className=\"validity\"></span>\n        </form>\n\n    );\n\n\n    /*return(\n        <>\n            <InputGroup>\n                <Form.Control type=\"search\" placeholder=\"Artist Name\" onChange={handleQueryChange}/>\n            </InputGroup>\n            <SearchDropdown searchResults={searchResults} onArtistChange={props.onArtistChange}/>\n            <InputGroup>\n                <Form.Control type=\"number\" placeholder=\"Graph Size\" min=\"1\" max=\"25\" onChange={handlesimilarArtistsLimitChange} defaultValue={similarArtistsLimit}/>\n            </InputGroup>\n        </>\n    );*/\n}\n\nexport default SearchBox;\n//export type { ArtistType };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}