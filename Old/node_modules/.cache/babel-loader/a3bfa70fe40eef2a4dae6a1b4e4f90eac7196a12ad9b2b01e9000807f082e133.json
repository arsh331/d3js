{"ast":null,"code":"import { isValidElement as t, useMemo as n, createElement as i } from \"react\";\nimport { filter as o, omit as e, isNumber as a } from \"lodash\";\nimport { absoluteAngleDegrees as r, radiansToDegrees as s, positionFromAngle as l, degreesToRadians as u, useTheme as h, useMotionConfig as d, useAnimatedPath as c } from \"@nivo/core\";\nimport f from \"lodash/omit\";\nimport { useSpring as y, animated as x } from \"@react-spring/web\";\nimport { jsxs as m, Fragment as p, jsx as g } from \"react/jsx-runtime\";\nfunction k() {\n  return k = Object.assign ? Object.assign.bind() : function (t) {\n    for (var n = 1; n < arguments.length; n++) {\n      var i = arguments[n];\n      for (var o in i) Object.prototype.hasOwnProperty.call(i, o) && (t[o] = i[o]);\n    }\n    return t;\n  }, k.apply(this, arguments);\n}\nvar W = {\n    dotSize: 4,\n    noteWidth: 120,\n    noteTextOffset: 8,\n    animate: !0\n  },\n  v = function (n) {\n    var i = typeof n;\n    return t(n) || \"string\" === i || \"function\" === i || \"object\" === i;\n  },\n  b = function (t) {\n    var n = typeof t;\n    return \"string\" === n || \"function\" === n;\n  },\n  w = function (t) {\n    return \"circle\" === t.type;\n  },\n  z = function (t) {\n    return \"dot\" === t.type;\n  },\n  P = function (t) {\n    return \"rect\" === t.type;\n  },\n  C = function (t) {\n    var n = t.data,\n      i = t.annotations,\n      a = t.getPosition,\n      r = t.getDimensions;\n    return i.reduce(function (t, i) {\n      var s = i.offset || 0;\n      return [].concat(t, o(n, i.match).map(function (t) {\n        var n = a(t),\n          o = r(t);\n        return (w(i) || P(i)) && (o.size = o.size + 2 * s, o.width = o.width + 2 * s, o.height = o.height + 2 * s), k({}, e(i, [\"match\", \"offset\"]), n, o, {\n          size: i.size || o.size,\n          datum: t\n        });\n      }));\n    }, []);\n  },\n  O = function (t, n, i, o) {\n    var e = Math.atan2(o - n, i - t);\n    return r(s(e));\n  },\n  S = function (t) {\n    var n,\n      i,\n      o = t.x,\n      e = t.y,\n      r = t.noteX,\n      s = t.noteY,\n      h = t.noteWidth,\n      d = void 0 === h ? W.noteWidth : h,\n      c = t.noteTextOffset,\n      f = void 0 === c ? W.noteTextOffset : c;\n    if (a(r)) n = o + r;else {\n      if (void 0 === r.abs) throw new Error(\"noteX should be either a number or an object containing an 'abs' property\");\n      n = r.abs;\n    }\n    if (a(s)) i = e + s;else {\n      if (void 0 === s.abs) throw new Error(\"noteY should be either a number or an object containing an 'abs' property\");\n      i = s.abs;\n    }\n    var y = o,\n      x = e,\n      m = O(o, e, n, i);\n    if (w(t)) {\n      var p = l(u(m), t.size / 2);\n      y += p.x, x += p.y;\n    }\n    if (P(t)) {\n      var g = Math.round((m + 90) / 45) % 8;\n      0 === g && (x -= t.height / 2), 1 === g && (y += t.width / 2, x -= t.height / 2), 2 === g && (y += t.width / 2), 3 === g && (y += t.width / 2, x += t.height / 2), 4 === g && (x += t.height / 2), 5 === g && (y -= t.width / 2, x += t.height / 2), 6 === g && (y -= t.width / 2), 7 === g && (y -= t.width / 2, x -= t.height / 2);\n    }\n    var k = n,\n      v = n;\n    return (m + 90) % 360 > 180 ? (k -= d, v -= d) : v += d, {\n      points: [[y, x], [n, i], [v, i]],\n      text: [k, i - f],\n      angle: m + 90\n    };\n  },\n  j = function (t) {\n    var i = t.data,\n      o = t.annotations,\n      e = t.getPosition,\n      a = t.getDimensions;\n    return n(function () {\n      return C({\n        data: i,\n        annotations: o,\n        getPosition: e,\n        getDimensions: a\n      });\n    }, [i, o, e, a]);\n  },\n  M = function (t) {\n    var i = t.annotations;\n    return n(function () {\n      return i.map(function (t) {\n        return k({}, t, {\n          computed: S(k({}, t))\n        });\n      });\n    }, [i]);\n  },\n  T = function (t) {\n    return n(function () {\n      return S(t);\n    }, [t]);\n  },\n  E = function (t) {\n    var n = t.datum,\n      o = t.x,\n      e = t.y,\n      a = t.note,\n      r = h(),\n      s = d(),\n      l = s.animate,\n      u = s.config,\n      c = y({\n        x: o,\n        y: e,\n        config: u,\n        immediate: !l\n      });\n    return \"function\" == typeof a ? i(a, {\n      x: o,\n      y: e,\n      datum: n\n    }) : m(p, {\n      children: [r.annotations.text.outlineWidth > 0 && g(x.text, {\n        x: c.x,\n        y: c.y,\n        style: k({}, r.annotations.text, {\n          strokeLinejoin: \"round\",\n          strokeWidth: 2 * r.annotations.text.outlineWidth,\n          stroke: r.annotations.text.outlineColor\n        }),\n        children: a\n      }), g(x.text, {\n        x: c.x,\n        y: c.y,\n        style: f(r.annotations.text, [\"outlineWidth\", \"outlineColor\"]),\n        children: a\n      })]\n    });\n  },\n  I = function (t) {\n    var i = t.points,\n      o = t.isOutline,\n      e = void 0 !== o && o,\n      a = h(),\n      r = n(function () {\n        var t = i[0];\n        return i.slice(1).reduce(function (t, n) {\n          return t + \" L\" + n[0] + \",\" + n[1];\n        }, \"M\" + t[0] + \",\" + t[1]);\n      }, [i]),\n      s = c(r);\n    if (e && a.annotations.link.outlineWidth <= 0) return null;\n    var l = k({}, a.annotations.link);\n    return e && (l.strokeLinecap = \"square\", l.strokeWidth = a.annotations.link.strokeWidth + 2 * a.annotations.link.outlineWidth, l.stroke = a.annotations.link.outlineColor, l.opacity = a.annotations.link.outlineOpacity), g(x.path, {\n      fill: \"none\",\n      d: s,\n      style: l\n    });\n  },\n  D = function (t) {\n    var n = t.x,\n      i = t.y,\n      o = t.size,\n      e = h(),\n      a = d(),\n      r = a.animate,\n      s = a.config,\n      l = y({\n        x: n,\n        y: i,\n        radius: o / 2,\n        config: s,\n        immediate: !r\n      });\n    return m(p, {\n      children: [e.annotations.outline.outlineWidth > 0 && g(x.circle, {\n        cx: l.x,\n        cy: l.y,\n        r: l.radius,\n        style: k({}, e.annotations.outline, {\n          fill: \"none\",\n          strokeWidth: e.annotations.outline.strokeWidth + 2 * e.annotations.outline.outlineWidth,\n          stroke: e.annotations.outline.outlineColor,\n          opacity: e.annotations.outline.outlineOpacity\n        })\n      }), g(x.circle, {\n        cx: l.x,\n        cy: l.y,\n        r: l.radius,\n        style: e.annotations.outline\n      })]\n    });\n  },\n  L = function (t) {\n    var n = t.x,\n      i = t.y,\n      o = t.size,\n      e = void 0 === o ? W.dotSize : o,\n      a = h(),\n      r = d(),\n      s = r.animate,\n      l = r.config,\n      u = y({\n        x: n,\n        y: i,\n        radius: e / 2,\n        config: l,\n        immediate: !s\n      });\n    return m(p, {\n      children: [a.annotations.outline.outlineWidth > 0 && g(x.circle, {\n        cx: u.x,\n        cy: u.y,\n        r: u.radius,\n        style: k({}, a.annotations.outline, {\n          fill: \"none\",\n          strokeWidth: 2 * a.annotations.outline.outlineWidth,\n          stroke: a.annotations.outline.outlineColor,\n          opacity: a.annotations.outline.outlineOpacity\n        })\n      }), g(x.circle, {\n        cx: u.x,\n        cy: u.y,\n        r: u.radius,\n        style: a.annotations.symbol\n      })]\n    });\n  },\n  R = function (t) {\n    var n = t.x,\n      i = t.y,\n      o = t.width,\n      e = t.height,\n      a = t.borderRadius,\n      r = void 0 === a ? 6 : a,\n      s = h(),\n      l = d(),\n      u = l.animate,\n      c = l.config,\n      f = y({\n        x: n - o / 2,\n        y: i - e / 2,\n        width: o,\n        height: e,\n        config: c,\n        immediate: !u\n      });\n    return m(p, {\n      children: [s.annotations.outline.outlineWidth > 0 && g(x.rect, {\n        x: f.x,\n        y: f.y,\n        rx: r,\n        ry: r,\n        width: f.width,\n        height: f.height,\n        style: k({}, s.annotations.outline, {\n          fill: \"none\",\n          strokeWidth: s.annotations.outline.strokeWidth + 2 * s.annotations.outline.outlineWidth,\n          stroke: s.annotations.outline.outlineColor,\n          opacity: s.annotations.outline.outlineOpacity\n        })\n      }), g(x.rect, {\n        x: f.x,\n        y: f.y,\n        rx: r,\n        ry: r,\n        width: f.width,\n        height: f.height,\n        style: s.annotations.outline\n      })]\n    });\n  },\n  q = function (t) {\n    var n = t.datum,\n      i = t.x,\n      o = t.y,\n      e = t.note,\n      a = T(t);\n    if (!v(e)) throw new Error(\"note should be a valid react element\");\n    return m(p, {\n      children: [g(I, {\n        points: a.points,\n        isOutline: !0\n      }), w(t) && g(D, {\n        x: i,\n        y: o,\n        size: t.size\n      }), z(t) && g(L, {\n        x: i,\n        y: o,\n        size: t.size\n      }), P(t) && g(R, {\n        x: i,\n        y: o,\n        width: t.width,\n        height: t.height,\n        borderRadius: t.borderRadius\n      }), g(I, {\n        points: a.points\n      }), g(E, {\n        datum: n,\n        x: a.text[0],\n        y: a.text[1],\n        note: e\n      })]\n    });\n  },\n  J = function (t, n) {\n    n.forEach(function (n, i) {\n      var o = n[0],\n        e = n[1];\n      0 === i ? t.moveTo(o, e) : t.lineTo(o, e);\n    });\n  },\n  X = function (t, n) {\n    var i = n.annotations,\n      o = n.theme;\n    0 !== i.length && (t.save(), i.forEach(function (n) {\n      if (!b(n.note)) throw new Error(\"note is invalid for canvas implementation\");\n      o.annotations.link.outlineWidth > 0 && (t.lineCap = \"square\", t.strokeStyle = o.annotations.link.outlineColor, t.lineWidth = o.annotations.link.strokeWidth + 2 * o.annotations.link.outlineWidth, t.beginPath(), J(t, n.computed.points), t.stroke(), t.lineCap = \"butt\"), w(n) && o.annotations.outline.outlineWidth > 0 && (t.strokeStyle = o.annotations.outline.outlineColor, t.lineWidth = o.annotations.outline.strokeWidth + 2 * o.annotations.outline.outlineWidth, t.beginPath(), t.arc(n.x, n.y, n.size / 2, 0, 2 * Math.PI), t.stroke()), z(n) && o.annotations.symbol.outlineWidth > 0 && (t.strokeStyle = o.annotations.symbol.outlineColor, t.lineWidth = 2 * o.annotations.symbol.outlineWidth, t.beginPath(), t.arc(n.x, n.y, n.size / 2, 0, 2 * Math.PI), t.stroke()), P(n) && o.annotations.outline.outlineWidth > 0 && (t.strokeStyle = o.annotations.outline.outlineColor, t.lineWidth = o.annotations.outline.strokeWidth + 2 * o.annotations.outline.outlineWidth, t.beginPath(), t.rect(n.x - n.width / 2, n.y - n.height / 2, n.width, n.height), t.stroke()), t.strokeStyle = o.annotations.link.stroke, t.lineWidth = o.annotations.link.strokeWidth, t.beginPath(), J(t, n.computed.points), t.stroke(), w(n) && (t.strokeStyle = o.annotations.outline.stroke, t.lineWidth = o.annotations.outline.strokeWidth, t.beginPath(), t.arc(n.x, n.y, n.size / 2, 0, 2 * Math.PI), t.stroke()), z(n) && (t.fillStyle = o.annotations.symbol.fill, t.beginPath(), t.arc(n.x, n.y, n.size / 2, 0, 2 * Math.PI), t.fill()), P(n) && (t.strokeStyle = o.annotations.outline.stroke, t.lineWidth = o.annotations.outline.strokeWidth, t.beginPath(), t.rect(n.x - n.width / 2, n.y - n.height / 2, n.width, n.height), t.stroke()), \"function\" == typeof n.note ? n.note(t, {\n        datum: n.datum,\n        x: n.computed.text[0],\n        y: n.computed.text[1],\n        theme: o\n      }) : (t.font = o.annotations.text.fontSize + \"px \" + o.annotations.text.fontFamily, t.textAlign = \"left\", t.textBaseline = \"alphabetic\", t.fillStyle = o.annotations.text.fill, t.strokeStyle = o.annotations.text.outlineColor, t.lineWidth = 2 * o.annotations.text.outlineWidth, o.annotations.text.outlineWidth > 0 && (t.lineJoin = \"round\", t.strokeText(n.note, n.computed.text[0], n.computed.text[1]), t.lineJoin = \"miter\"), t.fillText(n.note, n.computed.text[0], n.computed.text[1]));\n    }), t.restore());\n  };\nexport { q as Annotation, C as bindAnnotations, S as computeAnnotation, W as defaultProps, O as getLinkAngle, b as isCanvasNote, w as isCircleAnnotation, z as isDotAnnotation, P as isRectAnnotation, v as isSvgNote, X as renderAnnotationsToCanvas, j as useAnnotations, T as useComputedAnnotation, M as useComputedAnnotations };","map":{"version":3,"names":["W","dotSize","noteWidth","noteTextOffset","animate","v","isSvgNote","n","i","t","b","isCanvasNote","w","isCircleAnnotation","type","z","isDotAnnotation","P","isRectAnnotation","C","bindAnnotations","data","annotations","a","getPosition","r","getDimensions","reduce","s","offset","concat","o","match","map","size","width","height","k","e","datum","O","getLinkAngle","Math","atan2","S","computeAnnotation","x","y","noteX","noteY","h","d","c","f","abs","Error","m","p","l","u","g","round","points","text","angle","j","useAnnotations","M","useComputedAnnotations","computed","T","useComputedAnnotation","E","AnnotationNote","note","config","immediate","children","outlineWidth","style","strokeLinejoin","strokeWidth","stroke","outlineColor","I","AnnotationLink","isOutline","slice","link","strokeLinecap","opacity","outlineOpacity","path","fill","D","CircleAnnotationOutline","radius","outline","circle","cx","cy","L","DotAnnotationOutline","symbol","R","RectAnnotationOutline","borderRadius","rect","rx","ry","q","Annotation","J","drawPoints","forEach","moveTo","lineTo","X","renderAnnotationsToCanvas","theme","length","save","lineCap","strokeStyle","lineWidth","beginPath","arc","PI","fillStyle","font","fontSize","fontFamily","textAlign","textBaseline","lineJoin","strokeText","fillText","restore","defaultProps"],"sources":["/gsoc/git/d3js/node_modules/@nivo/annotations/src/props.ts","/gsoc/git/d3js/node_modules/@nivo/annotations/src/utils.ts","/gsoc/git/d3js/node_modules/@nivo/annotations/src/compute.ts","/gsoc/git/d3js/node_modules/@nivo/annotations/src/hooks.ts","/gsoc/git/d3js/node_modules/@nivo/annotations/src/AnnotationNote.tsx","/gsoc/git/d3js/node_modules/@nivo/annotations/src/AnnotationLink.tsx","/gsoc/git/d3js/node_modules/@nivo/annotations/src/CircleAnnotationOutline.tsx","/gsoc/git/d3js/node_modules/@nivo/annotations/src/DotAnnotationOutline.tsx","/gsoc/git/d3js/node_modules/@nivo/annotations/src/RectAnnotationOutline.tsx","/gsoc/git/d3js/node_modules/@nivo/annotations/src/Annotation.tsx","/gsoc/git/d3js/node_modules/@nivo/annotations/src/canvas.ts"],"sourcesContent":["export const defaultProps = {\n    dotSize: 4,\n    noteWidth: 120,\n    noteTextOffset: 8,\n    animate: true,\n}\n","import {\n    AnnotationSpec,\n    CircleAnnotationSpec,\n    DotAnnotationSpec,\n    Note,\n    NoteCanvas,\n    NoteSvg,\n    RectAnnotationSpec,\n} from './types'\nimport { isValidElement } from 'react'\n\nexport const isSvgNote = <Datum>(note: Note<Datum>): note is NoteSvg<Datum> => {\n    const noteType = typeof note\n\n    return (\n        isValidElement(note) ||\n        noteType === 'string' ||\n        noteType === 'function' ||\n        noteType === 'object'\n    )\n}\n\nexport const isCanvasNote = <Datum>(note: Note<Datum>): note is NoteCanvas<Datum> => {\n    const noteType = typeof note\n\n    return noteType === 'string' || noteType === 'function'\n}\n\nexport const isCircleAnnotation = <Datum>(\n    annotationSpec: AnnotationSpec<Datum>\n): annotationSpec is CircleAnnotationSpec<Datum> => annotationSpec.type === 'circle'\n\nexport const isDotAnnotation = <Datum>(\n    annotationSpec: AnnotationSpec<Datum>\n): annotationSpec is DotAnnotationSpec<Datum> => annotationSpec.type === 'dot'\n\nexport const isRectAnnotation = <Datum>(\n    annotationSpec: AnnotationSpec<Datum>\n): annotationSpec is RectAnnotationSpec<Datum> => annotationSpec.type === 'rect'\n","import { filter, isNumber, omit } from 'lodash'\nimport {\n    radiansToDegrees,\n    absoluteAngleDegrees,\n    degreesToRadians,\n    positionFromAngle,\n} from '@nivo/core'\nimport { defaultProps } from './props'\nimport {\n    AnnotationPositionGetter,\n    AnnotationDimensionsGetter,\n    BoundAnnotation,\n    AnnotationMatcher,\n    AnnotationInstructions,\n} from './types'\nimport { isCircleAnnotation, isRectAnnotation } from './utils'\n\nexport const bindAnnotations = <\n    Datum = {\n        x: number\n        y: number\n    }\n>({\n    data,\n    annotations,\n    getPosition,\n    getDimensions,\n}: {\n    data: Datum[]\n    annotations: AnnotationMatcher<Datum>[]\n    getPosition: AnnotationPositionGetter<Datum>\n    getDimensions: AnnotationDimensionsGetter<Datum>\n}): BoundAnnotation<Datum>[] =>\n    annotations.reduce((acc: BoundAnnotation<Datum>[], annotation) => {\n        const offset = annotation.offset || 0\n\n        return [\n            ...acc,\n            ...filter<Datum>(data, annotation.match).map(datum => {\n                const position = getPosition(datum)\n                const dimensions = getDimensions(datum)\n\n                if (isCircleAnnotation(annotation) || isRectAnnotation(annotation)) {\n                    dimensions.size = dimensions.size + offset * 2\n                    dimensions.width = dimensions.width + offset * 2\n                    dimensions.height = dimensions.height + offset * 2\n                }\n\n                // acc.push({\n                //     ...omit(annotation, ['match', 'offset']),\n                //     ...position,\n                //     ...dimensions,\n                //     size: annotation.size || dimensions.size,\n                //     datum,\n                // } as any)\n                // return [\n                //     ...acc,\n                //     {\n                //         ...omit(annotation, ['match', 'offset']),\n                //         ...position,\n                //         ...dimensions,\n                //         size: annotation.size || dimensions.size,\n                //         datum,\n                //     },\n                // ]\n                return {\n                    ...omit(annotation, ['match', 'offset']),\n                    ...position,\n                    ...dimensions,\n                    size: annotation.size || dimensions.size,\n                    datum,\n                } as Required<BoundAnnotation<Datum>>\n            }),\n        ]\n\n        // return acc\n    }, [])\n\nexport const getLinkAngle = (\n    sourceX: number,\n    sourceY: number,\n    targetX: number,\n    targetY: number\n) => {\n    const angle = Math.atan2(targetY - sourceY, targetX - sourceX)\n\n    return absoluteAngleDegrees(radiansToDegrees(angle))\n}\n\nexport const computeAnnotation = <Datum>(\n    annotation: BoundAnnotation<Datum>\n): AnnotationInstructions => {\n    const {\n        x,\n        y,\n        noteX,\n        noteY,\n        noteWidth = defaultProps.noteWidth,\n        noteTextOffset = defaultProps.noteTextOffset,\n    } = annotation\n\n    let computedNoteX: number\n    let computedNoteY: number\n\n    if (isNumber(noteX)) {\n        computedNoteX = x + noteX\n    } else if (noteX.abs !== undefined) {\n        computedNoteX = noteX.abs\n    } else {\n        throw new Error(`noteX should be either a number or an object containing an 'abs' property`)\n    }\n\n    if (isNumber(noteY)) {\n        computedNoteY = y + noteY\n    } else if (noteY.abs !== undefined) {\n        computedNoteY = noteY.abs\n    } else {\n        throw new Error(`noteY should be either a number or an object containing an 'abs' property`)\n    }\n\n    let computedX = x\n    let computedY = y\n\n    const angle = getLinkAngle(x, y, computedNoteX, computedNoteY)\n\n    if (isCircleAnnotation<Datum>(annotation)) {\n        const position = positionFromAngle(degreesToRadians(angle), annotation.size / 2)\n        computedX += position.x\n        computedY += position.y\n    }\n\n    if (isRectAnnotation<Datum>(annotation)) {\n        const eighth = Math.round((angle + 90) / 45) % 8\n        if (eighth === 0) {\n            computedY -= annotation.height / 2\n        }\n        if (eighth === 1) {\n            computedX += annotation.width / 2\n            computedY -= annotation.height / 2\n        }\n        if (eighth === 2) {\n            computedX += annotation.width / 2\n        }\n        if (eighth === 3) {\n            computedX += annotation.width / 2\n            computedY += annotation.height / 2\n        }\n        if (eighth === 4) {\n            computedY += annotation.height / 2\n        }\n        if (eighth === 5) {\n            computedX -= annotation.width / 2\n            computedY += annotation.height / 2\n        }\n        if (eighth === 6) {\n            computedX -= annotation.width / 2\n        }\n        if (eighth === 7) {\n            computedX -= annotation.width / 2\n            computedY -= annotation.height / 2\n        }\n    }\n\n    let textX = computedNoteX\n    const textY = computedNoteY - noteTextOffset\n\n    let noteLineX = computedNoteX\n    const noteLineY = computedNoteY\n\n    if ((angle + 90) % 360 > 180) {\n        textX -= noteWidth\n        noteLineX -= noteWidth\n    } else {\n        noteLineX += noteWidth\n    }\n\n    return {\n        points: [\n            [computedX, computedY],\n            [computedNoteX, computedNoteY],\n            [noteLineX, noteLineY],\n        ] as [number, number][],\n        text: [textX, textY],\n        angle: angle + 90,\n    }\n}\n","import { useMemo } from 'react'\nimport { bindAnnotations, computeAnnotation } from './compute'\nimport {\n    AnnotationDimensionsGetter,\n    AnnotationMatcher,\n    AnnotationPositionGetter,\n    BoundAnnotation,\n} from './types'\n\n/**\n * Bind annotations to a dataset.\n */\nexport const useAnnotations = <Datum>({\n    data,\n    annotations,\n    getPosition,\n    getDimensions,\n}: {\n    data: Datum[]\n    annotations: AnnotationMatcher<Datum>[]\n    getPosition: AnnotationPositionGetter<Datum>\n    getDimensions: AnnotationDimensionsGetter<Datum>\n}) =>\n    useMemo(\n        () =>\n            bindAnnotations<Datum>({\n                data,\n                annotations,\n                getPosition,\n                getDimensions,\n            }),\n        [data, annotations, getPosition, getDimensions]\n    )\n\nexport const useComputedAnnotations = <Datum>({\n    annotations,\n}: {\n    annotations: BoundAnnotation<Datum>[]\n}) =>\n    useMemo(\n        () =>\n            annotations.map(annotation => ({\n                ...annotation,\n                computed: computeAnnotation<Datum>({\n                    ...annotation,\n                }),\n            })),\n        [annotations]\n    )\n\nexport const useComputedAnnotation = <Datum>(annotation: BoundAnnotation<Datum>) =>\n    useMemo(() => computeAnnotation<Datum>(annotation), [annotation])\n","import { createElement } from 'react'\nimport omit from 'lodash/omit'\nimport { useSpring, animated } from '@react-spring/web'\nimport { useTheme, useMotionConfig } from '@nivo/core'\nimport { NoteSvg } from './types'\n\nexport const AnnotationNote = <Datum,>({\n    datum,\n    x,\n    y,\n    note,\n}: {\n    datum: Datum\n    x: number\n    y: number\n    note: NoteSvg<Datum>\n}) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        x,\n        y,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    if (typeof note === 'function') {\n        return createElement(note, { x, y, datum })\n    }\n\n    return (\n        <>\n            {theme.annotations.text.outlineWidth > 0 && (\n                <animated.text\n                    x={animatedProps.x}\n                    y={animatedProps.y}\n                    style={{\n                        ...theme.annotations.text,\n                        strokeLinejoin: 'round',\n                        strokeWidth: theme.annotations.text.outlineWidth * 2,\n                        stroke: theme.annotations.text.outlineColor,\n                    }}\n                >\n                    {note}\n                </animated.text>\n            )}\n            <animated.text\n                x={animatedProps.x}\n                y={animatedProps.y}\n                style={omit(theme.annotations.text, ['outlineWidth', 'outlineColor'])}\n            >\n                {note}\n            </animated.text>\n        </>\n    )\n}\n","import { useMemo } from 'react'\nimport { animated } from '@react-spring/web'\nimport { useAnimatedPath, useTheme } from '@nivo/core'\n\nexport const AnnotationLink = ({\n    points,\n    isOutline = false,\n}: {\n    points: [number, number][]\n    isOutline?: boolean\n}) => {\n    const theme = useTheme()\n\n    const path = useMemo(() => {\n        const [firstPoint, ...otherPoints] = points\n\n        return otherPoints.reduce(\n            (acc, [x, y]) => `${acc} L${x},${y}`,\n            `M${firstPoint[0]},${firstPoint[1]}`\n        )\n    }, [points])\n\n    const animatedPath = useAnimatedPath(path)\n\n    if (isOutline && theme.annotations.link.outlineWidth <= 0) {\n        return null\n    }\n\n    const style = { ...theme.annotations.link }\n    if (isOutline) {\n        style.strokeLinecap = 'square'\n        style.strokeWidth =\n            theme.annotations.link.strokeWidth + theme.annotations.link.outlineWidth * 2\n        style.stroke = theme.annotations.link.outlineColor\n        style.opacity = theme.annotations.link.outlineOpacity\n    }\n\n    return <animated.path fill=\"none\" d={animatedPath} style={style} />\n}\n","import { useSpring, animated } from '@react-spring/web'\nimport { useMotionConfig, useTheme } from '@nivo/core'\n\nexport const CircleAnnotationOutline = ({ x, y, size }: { x: number; y: number; size: number }) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        x,\n        y,\n        radius: size / 2,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <>\n            {theme.annotations.outline.outlineWidth > 0 && (\n                <animated.circle\n                    cx={animatedProps.x}\n                    cy={animatedProps.y}\n                    r={animatedProps.radius}\n                    style={{\n                        ...theme.annotations.outline,\n                        fill: 'none',\n                        strokeWidth:\n                            theme.annotations.outline.strokeWidth +\n                            theme.annotations.outline.outlineWidth * 2,\n                        stroke: theme.annotations.outline.outlineColor,\n                        opacity: theme.annotations.outline.outlineOpacity,\n                    }}\n                />\n            )}\n            <animated.circle\n                cx={animatedProps.x}\n                cy={animatedProps.y}\n                r={animatedProps.radius}\n                style={theme.annotations.outline}\n            />\n        </>\n    )\n}\n","import { useSpring, animated } from '@react-spring/web'\nimport { useMotionConfig, useTheme } from '@nivo/core'\nimport { defaultProps } from './props'\n\nexport const DotAnnotationOutline = ({\n    x,\n    y,\n    size = defaultProps.dotSize,\n}: {\n    x: number\n    y: number\n    size?: number\n}) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        x,\n        y,\n        radius: size / 2,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <>\n            {theme.annotations.outline.outlineWidth > 0 && (\n                <animated.circle\n                    cx={animatedProps.x}\n                    cy={animatedProps.y}\n                    r={animatedProps.radius}\n                    style={{\n                        ...theme.annotations.outline,\n                        fill: 'none',\n                        strokeWidth: theme.annotations.outline.outlineWidth * 2,\n                        stroke: theme.annotations.outline.outlineColor,\n                        opacity: theme.annotations.outline.outlineOpacity,\n                    }}\n                />\n            )}\n            <animated.circle\n                cx={animatedProps.x}\n                cy={animatedProps.y}\n                r={animatedProps.radius}\n                style={theme.annotations.symbol}\n            />\n        </>\n    )\n}\n","import { useSpring, animated } from '@react-spring/web'\nimport { useMotionConfig, useTheme } from '@nivo/core'\n\nexport const RectAnnotationOutline = ({\n    x,\n    y,\n    width,\n    height,\n    borderRadius = 6,\n}: {\n    x: number\n    y: number\n    width: number\n    height: number\n    borderRadius?: number\n}) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        x: x - width / 2,\n        y: y - height / 2,\n        width,\n        height,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <>\n            {theme.annotations.outline.outlineWidth > 0 && (\n                <animated.rect\n                    x={animatedProps.x}\n                    y={animatedProps.y}\n                    rx={borderRadius}\n                    ry={borderRadius}\n                    width={animatedProps.width}\n                    height={animatedProps.height}\n                    style={{\n                        ...theme.annotations.outline,\n                        fill: 'none',\n                        strokeWidth:\n                            theme.annotations.outline.strokeWidth +\n                            theme.annotations.outline.outlineWidth * 2,\n                        stroke: theme.annotations.outline.outlineColor,\n                        opacity: theme.annotations.outline.outlineOpacity,\n                    }}\n                />\n            )}\n            <animated.rect\n                x={animatedProps.x}\n                y={animatedProps.y}\n                rx={borderRadius}\n                ry={borderRadius}\n                width={animatedProps.width}\n                height={animatedProps.height}\n                style={theme.annotations.outline}\n            />\n        </>\n    )\n}\n","import { useComputedAnnotation } from './hooks'\nimport { AnnotationNote } from './AnnotationNote'\nimport { AnnotationLink } from './AnnotationLink'\nimport { CircleAnnotationOutline } from './CircleAnnotationOutline'\nimport { DotAnnotationOutline } from './DotAnnotationOutline'\nimport { RectAnnotationOutline } from './RectAnnotationOutline'\nimport { BoundAnnotation } from './types'\nimport { isCircleAnnotation, isDotAnnotation, isRectAnnotation, isSvgNote } from './utils'\n\nexport const Annotation = <Datum,>(annotation: BoundAnnotation<Datum>) => {\n    const { datum, x, y, note } = annotation\n    const computed = useComputedAnnotation(annotation)\n\n    if (!isSvgNote(note)) {\n        throw new Error('note should be a valid react element')\n    }\n\n    return (\n        <>\n            <AnnotationLink points={computed.points} isOutline={true} />\n            {isCircleAnnotation(annotation) && (\n                <CircleAnnotationOutline x={x} y={y} size={annotation.size} />\n            )}\n            {isDotAnnotation(annotation) && (\n                <DotAnnotationOutline x={x} y={y} size={annotation.size} />\n            )}\n            {isRectAnnotation(annotation) && (\n                <RectAnnotationOutline\n                    x={x}\n                    y={y}\n                    width={annotation.width}\n                    height={annotation.height}\n                    borderRadius={annotation.borderRadius}\n                />\n            )}\n            <AnnotationLink points={computed.points} />\n            <AnnotationNote datum={datum} x={computed.text[0]} y={computed.text[1]} note={note} />\n        </>\n    )\n}\n","import { CompleteTheme } from '@nivo/core'\nimport { ComputedAnnotation } from './types'\nimport { isCanvasNote, isCircleAnnotation, isDotAnnotation, isRectAnnotation } from './utils'\n\nconst drawPoints = (ctx: CanvasRenderingContext2D, points: [number, number][]) => {\n    points.forEach(([x, y], index) => {\n        if (index === 0) {\n            ctx.moveTo(x, y)\n        } else {\n            ctx.lineTo(x, y)\n        }\n    })\n}\n\nexport const renderAnnotationsToCanvas = <Datum>(\n    ctx: CanvasRenderingContext2D,\n    {\n        annotations,\n        theme,\n    }: {\n        annotations: ComputedAnnotation<Datum>[]\n        theme: CompleteTheme\n    }\n) => {\n    if (annotations.length === 0) return\n\n    ctx.save()\n    annotations.forEach(annotation => {\n        if (!isCanvasNote(annotation.note)) {\n            throw new Error('note is invalid for canvas implementation')\n        }\n\n        if (theme.annotations.link.outlineWidth > 0) {\n            ctx.lineCap = 'square'\n            ctx.strokeStyle = theme.annotations.link.outlineColor\n            ctx.lineWidth =\n                theme.annotations.link.strokeWidth + theme.annotations.link.outlineWidth * 2\n            ctx.beginPath()\n            drawPoints(ctx, annotation.computed.points)\n            ctx.stroke()\n            ctx.lineCap = 'butt'\n        }\n\n        if (isCircleAnnotation(annotation) && theme.annotations.outline.outlineWidth > 0) {\n            ctx.strokeStyle = theme.annotations.outline.outlineColor\n            ctx.lineWidth =\n                theme.annotations.outline.strokeWidth + theme.annotations.outline.outlineWidth * 2\n            ctx.beginPath()\n            ctx.arc(annotation.x, annotation.y, annotation.size / 2, 0, 2 * Math.PI)\n            ctx.stroke()\n        }\n\n        if (isDotAnnotation(annotation) && theme.annotations.symbol.outlineWidth > 0) {\n            ctx.strokeStyle = theme.annotations.symbol.outlineColor\n            ctx.lineWidth = theme.annotations.symbol.outlineWidth * 2\n            ctx.beginPath()\n            ctx.arc(annotation.x, annotation.y, annotation.size / 2, 0, 2 * Math.PI)\n            ctx.stroke()\n        }\n\n        if (isRectAnnotation(annotation) && theme.annotations.outline.outlineWidth > 0) {\n            ctx.strokeStyle = theme.annotations.outline.outlineColor\n            ctx.lineWidth =\n                theme.annotations.outline.strokeWidth + theme.annotations.outline.outlineWidth * 2\n            ctx.beginPath()\n            ctx.rect(\n                annotation.x - annotation.width / 2,\n                annotation.y - annotation.height / 2,\n                annotation.width,\n                annotation.height\n            )\n            ctx.stroke()\n        }\n\n        ctx.strokeStyle = theme.annotations.link.stroke\n        ctx.lineWidth = theme.annotations.link.strokeWidth\n        ctx.beginPath()\n        drawPoints(ctx, annotation.computed.points)\n        ctx.stroke()\n\n        if (isCircleAnnotation(annotation)) {\n            ctx.strokeStyle = theme.annotations.outline.stroke\n            ctx.lineWidth = theme.annotations.outline.strokeWidth\n            ctx.beginPath()\n            ctx.arc(annotation.x, annotation.y, annotation.size / 2, 0, 2 * Math.PI)\n            ctx.stroke()\n        }\n\n        if (isDotAnnotation(annotation)) {\n            ctx.fillStyle = theme.annotations.symbol.fill\n            ctx.beginPath()\n            ctx.arc(annotation.x, annotation.y, annotation.size / 2, 0, 2 * Math.PI)\n            ctx.fill()\n        }\n\n        if (isRectAnnotation(annotation)) {\n            ctx.strokeStyle = theme.annotations.outline.stroke\n            ctx.lineWidth = theme.annotations.outline.strokeWidth\n            ctx.beginPath()\n            ctx.rect(\n                annotation.x - annotation.width / 2,\n                annotation.y - annotation.height / 2,\n                annotation.width,\n                annotation.height\n            )\n            ctx.stroke()\n        }\n\n        if (typeof annotation.note === 'function') {\n            annotation.note(ctx, {\n                datum: annotation.datum,\n                x: annotation.computed.text[0],\n                y: annotation.computed.text[1],\n                theme,\n            })\n        } else {\n            ctx.font = `${theme.annotations.text.fontSize}px ${theme.annotations.text.fontFamily}`\n            ctx.textAlign = 'left'\n            ctx.textBaseline = 'alphabetic'\n\n            ctx.fillStyle = theme.annotations.text.fill\n            ctx.strokeStyle = theme.annotations.text.outlineColor\n            ctx.lineWidth = theme.annotations.text.outlineWidth * 2\n\n            if (theme.annotations.text.outlineWidth > 0) {\n                ctx.lineJoin = 'round'\n                ctx.strokeText(\n                    annotation.note,\n                    annotation.computed.text[0],\n                    annotation.computed.text[1]\n                )\n                ctx.lineJoin = 'miter'\n            }\n            ctx.fillText(annotation.note, annotation.computed.text[0], annotation.computed.text[1])\n        }\n    })\n    ctx.restore()\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}