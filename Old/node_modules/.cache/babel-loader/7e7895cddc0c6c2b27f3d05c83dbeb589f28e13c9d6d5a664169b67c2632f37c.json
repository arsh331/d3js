{"ast":null,"code":"var _jsxFileName = \"/gsoc/git/d3js/src/Data.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Graph from \"./Graph\";\nimport Input from \"./Input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nArray.prototype.scaleBetween = function (scaledMin, scaledMax, num) {\n  var max = Math.max.apply(Math, this);\n  var min = Math.min.apply(Math, this);\n  return (scaledMax - scaledMin) * (num - min) / (max - min) + scaledMin;\n};\nconst colorGenerator = () => {\n  var red = Math.floor(Math.random() * 256);\n  var green = Math.floor(Math.random() * 256);\n  var blue = Math.floor(Math.random() * 256);\n  var color = \"rgb(\" + red + \",\" + green + \",\" + blue + \")\";\n  console.log(color);\n  return color;\n};\nconst Data = () => {\n  _s();\n  const LIMIT_VALUE = 18;\n  var artist_mbid = \"8f6bd1e4-fbe1-4f50-aa9b-94c450ec0f11\";\n  var url = \"https://labs.api.listenbrainz.org/similar-artists/json?algorithm=session_based_days_7500_session_300_contribution_5_threshold_10_limit_100_filter_True_skip_30&artist_mbid=\";\n  const [similarArtists, setSimilarArtists] = useState([]);\n  const [artist, setArtist] = useState(\"\");\n  const [limit, setLimit] = useState(LIMIT_VALUE);\n  var transformedArtists = {};\n  var color = colorGenerator();\n  const fetchData = artist_mbid => {\n    fetch(url + artist_mbid).then(response => response.json()).then(data => setData(data));\n  };\n  const setData = data => {\n    setArtist(data[1]);\n    setSimilarArtists(data[3]);\n  };\n  useEffect(() => {\n    fetchData(artist_mbid);\n  }, []);\n  var scoreList = [];\n  var artistList = similarArtists && similarArtists.data && similarArtists.data.map(artist => artist);\n  artistList = artistList && artistList.splice(0, limit);\n  var mainArtist = artist && artist.data && artist.data[0];\n  artistList && artistList.push(mainArtist);\n  console.log(artistList);\n  transformedArtists = artistList && {\n    \"nodes\": artistList.map((artist, index) => {\n      artist.score && scoreList.push(artist.score);\n      return {\n        \"id\": artist.name,\n        \"artist_mbid\": artist.artist_mbid,\n        \"size\": artist.artist_mbid === mainArtist.artist_mbid ? 150 : 85,\n        \"color\": artist.artist_mbid === mainArtist.artist_mbid ? color : index < limit / 3 ? colorGenerator : index < limit / 3 * 2 ? \"#4388b3\" : \"#5fa8d8\",\n        \"seed\": artist.artist_mbid === mainArtist.artist_mbid ? 1 : 0,\n        \"score\": artist.score\n      };\n    }),\n    \"links\": artistList.map((artist, index) => {\n      return {\n        \"source\": mainArtist.name,\n        \"target\": artist.name,\n        \"distance\": artist.artist_mbid != mainArtist.artist_mbid ? scoreList.scaleBetween(300, 100, artist.score) : 0,\n        \"strength\": artist.score < 5000 ? 2 : artist.score < 6000 ? 4 : 8\n      };\n    })\n  };\n  scoreList && console.log(scoreList);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      fetchData: fetchData,\n      setLimit: setLimit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Graph, {\n      data: transformedArtists,\n      fetchData: fetchData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n_s(Data, \"rS4tKU6+urwfRRzkk/W6KU1MsKg=\");\n_c = Data;\nexport default Data;\nvar _c;\n$RefreshReg$(_c, \"Data\");","map":{"version":3,"names":["React","useState","useEffect","Graph","Input","jsxDEV","_jsxDEV","Array","prototype","scaleBetween","scaledMin","scaledMax","num","max","Math","apply","min","colorGenerator","red","floor","random","green","blue","color","console","log","Data","_s","LIMIT_VALUE","artist_mbid","url","similarArtists","setSimilarArtists","artist","setArtist","limit","setLimit","transformedArtists","fetchData","fetch","then","response","json","data","setData","scoreList","artistList","map","splice","mainArtist","push","index","score","name","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/gsoc/git/d3js/src/Data.js"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport Graph from \"./Graph\";\nimport Input from \"./Input\";\n\nArray.prototype.scaleBetween = function(scaledMin, scaledMax, num) {\n    var max = Math.max.apply(Math, this);\n    var min = Math.min.apply(Math, this);\n    return ((scaledMax-scaledMin)*(num-min)/(max-min)+scaledMin);\n}\n\nconst colorGenerator = () => {\n    var red = Math.floor(Math.random() * 256);\n    var green = Math.floor(Math.random() * 256);\n    var blue  = Math.floor(Math.random() * 256);\n    var color = \"rgb(\" + red + \",\" + green + \",\" + blue + \")\";\n    console.log(color);\n    return color;\n    \n}\nconst Data = () => {\n    const LIMIT_VALUE = 18;\n    var artist_mbid = \"8f6bd1e4-fbe1-4f50-aa9b-94c450ec0f11\";\n    var url = \"https://labs.api.listenbrainz.org/similar-artists/json?algorithm=session_based_days_7500_session_300_contribution_5_threshold_10_limit_100_filter_True_skip_30&artist_mbid=\";\n    const [similarArtists, setSimilarArtists] = useState([]);\n    const [artist, setArtist] = useState(\"\");\n    const [limit, setLimit] = useState(LIMIT_VALUE);\n    var transformedArtists = {};\n    var color = colorGenerator(); \n\n    const fetchData = (artist_mbid) => {\n        fetch(url + artist_mbid)\n        .then((response) => response.json())\n        .then((data) => setData(data))   \n    }\n    \n    const setData = (data) => {\n        setArtist(data[1]);\n        setSimilarArtists(data[3]);\n    }\n    \n    useEffect(() => {\n        fetchData(artist_mbid);\n    }, []);\n\n    var scoreList = [];  \n    var artistList = similarArtists && similarArtists.data && (similarArtists.data.map((artist) => artist));\n    artistList = artistList && artistList.splice(0, limit);\n    var mainArtist = artist && artist.data && artist.data[0];\n    artistList && artistList.push(mainArtist);\n    console.log(artistList);    \n    transformedArtists = artistList && {\n        \"nodes\": artistList.map((artist, index) => {\n            artist.score && scoreList.push(artist.score);\n            return {\n                \"id\": artist.name,\n                \"artist_mbid\": artist.artist_mbid,\n                \"size\": artist.artist_mbid === mainArtist.artist_mbid ? 150 : 85,\n                \"color\": artist.artist_mbid === mainArtist.artist_mbid ? color : index < limit/3 ? colorGenerator : index < limit/3*2 ? \"#4388b3\" : \"#5fa8d8\",\n                \"seed\": artist.artist_mbid === mainArtist.artist_mbid ? 1 : 0,\n                \"score\": artist.score\n            };\n        }),\n        \"links\": artistList.map((artist, index) => {\n            \n            return {\n                \"source\": mainArtist.name,\n                \"target\": artist.name,\n                \"distance\": (artist.artist_mbid != mainArtist.artist_mbid ? scoreList.scaleBetween(300, 100, artist.score) : 0),\n                \"strength\": artist.score < 5000 ? 2 : artist.score < 6000 ? 4 : 8,\n                };\n        }),\n    }\n    scoreList && console.log(scoreList);\n    return (\n        <div>\n            <Input fetchData={fetchData} setLimit={setLimit}/>\n            <Graph data={transformedArtists} fetchData={fetchData}/>\n        </div>\n    );\n}\n\nexport default Data;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}