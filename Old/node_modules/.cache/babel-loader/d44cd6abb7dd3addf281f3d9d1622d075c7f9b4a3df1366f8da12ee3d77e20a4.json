{"ast":null,"code":"var _jsxFileName = \"/gsoc/git/d3js/src/Network.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { ResponsiveNetwork } from '@nivo/network';\nimport data from './data.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NetworkChart = () => {\n  _s();\n  const [chartData, setData] = useState(data);\n  const handleNodeClick = () => {\n    const updatedData = {\n      nodes: [{\n        color: 'rgba(0,32,023)',\n        id: 'Node 1'\n      }, {\n        id: 'Node 2'\n      }, {\n        id: 'Node 3'\n      }, {\n        id: 'Node 4'\n      }, {\n        id: 'Node 5'\n      }, {\n        id: 'Node 6'\n      }],\n      links: [{\n        color: 'red',\n        source: 'Node 2',\n        target: 'Node 2'\n      }, {\n        source: 'Node 2',\n        target: 'Node 3'\n      }, {\n        source: 'Node 2',\n        target: 'Node 4'\n      }, {\n        source: 'Node 2',\n        target: 'Node 5'\n      }, {\n        source: 'Node 2',\n        target: 'Node 6'\n      }]\n    };\n    setData(updatedData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '500px'\n    },\n    children: /*#__PURE__*/_jsxDEV(ResponsiveNetwork, {\n      data: chartData,\n      repulsivity: 30,\n      iterations: 10,\n      centeringStrength: 0.1,\n      nodeBorderWidth: 2,\n      linkThickness: 2,\n      motionStiffness: 160,\n      motionDamping: 12,\n      nodeSize: 20,\n      activeNodeSize: 30,\n      inactiveNodeSize: 10,\n      isInteractive: true,\n      onClick: node => handleNodeClick(node),\n      colors: {\n        scheme: 'nivo'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(NetworkChart, \"crZHr0fmz3voCHSKs4XFwkRGqTo=\");\n_c = NetworkChart;\nexport default NetworkChart;\nvar _c;\n$RefreshReg$(_c, \"NetworkChart\");","map":{"version":3,"names":["React","useState","ResponsiveNetwork","data","jsxDEV","_jsxDEV","NetworkChart","_s","chartData","setData","handleNodeClick","updatedData","nodes","color","id","links","source","target","style","height","children","repulsivity","iterations","centeringStrength","nodeBorderWidth","linkThickness","motionStiffness","motionDamping","nodeSize","activeNodeSize","inactiveNodeSize","isInteractive","onClick","node","colors","scheme","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/gsoc/git/d3js/src/Network.js"],"sourcesContent":["import React, {useState} from 'react';\nimport { ResponsiveNetwork } from '@nivo/network';\nimport data from './data.json';\n\nconst NetworkChart = () => {\n  \n  const [chartData, setData] = useState(data);\n  const handleNodeClick = () => {\n    const updatedData = {\n      nodes: [\n          { color: 'rgba(0,32,023)', id: 'Node 1' },\n          { id: 'Node 2' },\n          { id: 'Node 3' },\n          { id: 'Node 4' },\n          { id: 'Node 5' },\n          { id: 'Node 6' }\n        ],\n        links: [\n          { color: 'red', source: 'Node 2', target: 'Node 2' },\n          { source: 'Node 2', target: 'Node 3' },\n          { source: 'Node 2', target: 'Node 4' },\n          { source: 'Node 2', target: 'Node 5' },\n          { source: 'Node 2', target: 'Node 6' }\n        ]\n      };\n    setData(updatedData);\n  };\n  return (\n    <div style={{ height: '500px' }}>\n      <ResponsiveNetwork\n        data={chartData}\n        repulsivity={30}\n        iterations={10}\n        centeringStrength={0.1}\n        nodeBorderWidth={2}\n        linkThickness={2}\n        motionStiffness={160}\n        motionDamping={12}\n        nodeSize={20}\n        activeNodeSize={30}\n        inactiveNodeSize={10}\n        isInteractive={true}\n        onClick={(node) => handleNodeClick(node)}\n        colors={{ scheme: 'nivo' }}\n      />\n    </div>\n  );\n};\n\n\nexport default NetworkChart;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,SAASC,iBAAiB,QAAQ,eAAe;AACjD,OAAOC,IAAI,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEzB,MAAM,CAACC,SAAS,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAACE,IAAI,CAAC;EAC3C,MAAMO,eAAe,GAAGA,CAAA,KAAM;IAC5B,MAAMC,WAAW,GAAG;MAClBC,KAAK,EAAE,CACH;QAAEC,KAAK,EAAE,gBAAgB;QAAEC,EAAE,EAAE;MAAS,CAAC,EACzC;QAAEA,EAAE,EAAE;MAAS,CAAC,EAChB;QAAEA,EAAE,EAAE;MAAS,CAAC,EAChB;QAAEA,EAAE,EAAE;MAAS,CAAC,EAChB;QAAEA,EAAE,EAAE;MAAS,CAAC,EAChB;QAAEA,EAAE,EAAE;MAAS,CAAC,CACjB;MACDC,KAAK,EAAE,CACL;QAAEF,KAAK,EAAE,KAAK;QAAEG,MAAM,EAAE,QAAQ;QAAEC,MAAM,EAAE;MAAS,CAAC,EACpD;QAAED,MAAM,EAAE,QAAQ;QAAEC,MAAM,EAAE;MAAS,CAAC,EACtC;QAAED,MAAM,EAAE,QAAQ;QAAEC,MAAM,EAAE;MAAS,CAAC,EACtC;QAAED,MAAM,EAAE,QAAQ;QAAEC,MAAM,EAAE;MAAS,CAAC,EACtC;QAAED,MAAM,EAAE,QAAQ;QAAEC,MAAM,EAAE;MAAS,CAAC;IAE1C,CAAC;IACHR,OAAO,CAACE,WAAW,CAAC;EACtB,CAAC;EACD,oBACEN,OAAA;IAAKa,KAAK,EAAE;MAAEC,MAAM,EAAE;IAAQ,CAAE;IAAAC,QAAA,eAC9Bf,OAAA,CAACH,iBAAiB;MAChBC,IAAI,EAAEK,SAAU;MAChBa,WAAW,EAAE,EAAG;MAChBC,UAAU,EAAE,EAAG;MACfC,iBAAiB,EAAE,GAAI;MACvBC,eAAe,EAAE,CAAE;MACnBC,aAAa,EAAE,CAAE;MACjBC,eAAe,EAAE,GAAI;MACrBC,aAAa,EAAE,EAAG;MAClBC,QAAQ,EAAE,EAAG;MACbC,cAAc,EAAE,EAAG;MACnBC,gBAAgB,EAAE,EAAG;MACrBC,aAAa,EAAE,IAAK;MACpBC,OAAO,EAAGC,IAAI,IAAKvB,eAAe,CAACuB,IAAI,CAAE;MACzCC,MAAM,EAAE;QAAEC,MAAM,EAAE;MAAO;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAChC,EAAA,CA3CID,YAAY;AAAAkC,EAAA,GAAZlC,YAAY;AA8ClB,eAAeA,YAAY;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}