{"ast":null,"code":"var _jsxFileName = \"/gsoc/git/d3js/src/Data.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport NetworkChart from \"./NetworkChart\";\nimport Input from \"./Input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Data = () => {\n  _s();\n  var artist_mbid = \"8f6bd1e4-fbe1-4f50-aa9b-94c450ec0f11\";\n  var url = \"https://labs.api.listenbrainz.org/similar-artists/json?algorithm=session_based_days_7500_session_300_contribution_5_threshold_10_limit_100_filter_True_skip_30&artist_mbid=\";\n  const [similarArtists, setSimilarArtists] = useState([]);\n  const [artist, setArtist] = useState(\"\");\n  var transformedArtists = {};\n  const fetchData = artist_mbid => {\n    fetch(url + artist_mbid).then(response => response.json()).then(data => setData(data));\n  };\n  const setData = data => {\n    let artistData = data[3];\n    let newArtistData = artistData.splice(0, 1);\n    setArtist(data[1]);\n    setSimilarArtists(newArtistData);\n  };\n  useEffect(() => {\n    fetchData(artist_mbid);\n  }, []);\n  var artistList = similarArtists && similarArtists.data && similarArtists.data.map(artist => artist);\n  var mainArtist = artist && artist.data && artist.data[0];\n  artistList && artistList.push(mainArtist);\n  transformedArtists = artistList && {\n    \"nodes\": artistList.map(artist => {\n      return {\n        \"id\": artist.name,\n        \"artist_mbid\": artist.artist_mbid\n      };\n    }),\n    \"links\": artistList.map(artist => {\n      return {\n        \"source\": mainArtist.name,\n        \"target\": artist.name\n      };\n    })\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      fetchData: fetchData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NetworkChart, {\n      data: transformedArtists,\n      fetchData: fetchData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_s(Data, \"QGC6pfeN9kngUkSusChZ+5ra1A8=\");\n_c = Data;\nexport default Data;\nvar _c;\n$RefreshReg$(_c, \"Data\");","map":{"version":3,"names":["React","useState","useEffect","NetworkChart","Input","jsxDEV","_jsxDEV","Data","_s","artist_mbid","url","similarArtists","setSimilarArtists","artist","setArtist","transformedArtists","fetchData","fetch","then","response","json","data","setData","artistData","newArtistData","splice","artistList","map","mainArtist","push","name","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/gsoc/git/d3js/src/Data.js"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport NetworkChart from \"./NetworkChart\";\nimport Input from \"./Input\";\nconst Data = () => {\n    var artist_mbid = \"8f6bd1e4-fbe1-4f50-aa9b-94c450ec0f11\";\n    var url = \"https://labs.api.listenbrainz.org/similar-artists/json?algorithm=session_based_days_7500_session_300_contribution_5_threshold_10_limit_100_filter_True_skip_30&artist_mbid=\";\n    const [similarArtists, setSimilarArtists] = useState([]);\n    const [artist, setArtist] = useState(\"\");\n    \n    var transformedArtists = {}; \n\n    const fetchData = (artist_mbid) => {\n        fetch(url + artist_mbid)\n        .then((response) => response.json())\n        .then((data) => setData(data))   \n    }\n    \n    const setData = (data) => {\n        let artistData = data[3];\n        let newArtistData = artistData.splice(0, 1);\n        setArtist(data[1]);\n        setSimilarArtists(newArtistData);\n    }\n    \n    useEffect(() => {\n        fetchData(artist_mbid);\n    }, []);\n\n      \n    var artistList = similarArtists && similarArtists.data && (similarArtists.data.map((artist) => artist));\n    var mainArtist = artist && artist.data && artist.data[0];\n    artistList && artistList.push(mainArtist);\n        \n    transformedArtists = artistList && {\n        \"nodes\": artistList.map((artist) => {\n            return {\n                \"id\": artist.name,\n                \"artist_mbid\": artist.artist_mbid\n            };\n        }),\n        \"links\": artistList.map((artist) => {\n            return {\n                \"source\": mainArtist.name,\n                \"target\": artist.name,\n                };\n        }),\n    }\n\n    return (\n        <div>\n            <Input fetchData={fetchData}/>\n            <NetworkChart data={transformedArtists} fetchData={fetchData}/>\n        </div>\n    );\n}\n\nexport default Data;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,KAAK,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC5B,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,IAAIC,WAAW,GAAG,sCAAsC;EACxD,IAAIC,GAAG,GAAG,6KAA6K;EACvL,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACY,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAExC,IAAIc,kBAAkB,GAAG,CAAC,CAAC;EAE3B,MAAMC,SAAS,GAAIP,WAAW,IAAK;IAC/BQ,KAAK,CAACP,GAAG,GAAGD,WAAW,CAAC,CACvBS,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAKC,OAAO,CAACD,IAAI,CAAC,CAAC;EAClC,CAAC;EAED,MAAMC,OAAO,GAAID,IAAI,IAAK;IACtB,IAAIE,UAAU,GAAGF,IAAI,CAAC,CAAC,CAAC;IACxB,IAAIG,aAAa,GAAGD,UAAU,CAACE,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;IAC3CX,SAAS,CAACO,IAAI,CAAC,CAAC,CAAC,CAAC;IAClBT,iBAAiB,CAACY,aAAa,CAAC;EACpC,CAAC;EAEDtB,SAAS,CAAC,MAAM;IACZc,SAAS,CAACP,WAAW,CAAC;EAC1B,CAAC,EAAE,EAAE,CAAC;EAGN,IAAIiB,UAAU,GAAGf,cAAc,IAAIA,cAAc,CAACU,IAAI,IAAKV,cAAc,CAACU,IAAI,CAACM,GAAG,CAAEd,MAAM,IAAKA,MAAM,CAAE;EACvG,IAAIe,UAAU,GAAGf,MAAM,IAAIA,MAAM,CAACQ,IAAI,IAAIR,MAAM,CAACQ,IAAI,CAAC,CAAC,CAAC;EACxDK,UAAU,IAAIA,UAAU,CAACG,IAAI,CAACD,UAAU,CAAC;EAEzCb,kBAAkB,GAAGW,UAAU,IAAI;IAC/B,OAAO,EAAEA,UAAU,CAACC,GAAG,CAAEd,MAAM,IAAK;MAChC,OAAO;QACH,IAAI,EAAEA,MAAM,CAACiB,IAAI;QACjB,aAAa,EAAEjB,MAAM,CAACJ;MAC1B,CAAC;IACL,CAAC,CAAC;IACF,OAAO,EAAEiB,UAAU,CAACC,GAAG,CAAEd,MAAM,IAAK;MAChC,OAAO;QACH,QAAQ,EAAEe,UAAU,CAACE,IAAI;QACzB,QAAQ,EAAEjB,MAAM,CAACiB;MACjB,CAAC;IACT,CAAC;EACL,CAAC;EAED,oBACIxB,OAAA;IAAAyB,QAAA,gBACIzB,OAAA,CAACF,KAAK;MAACY,SAAS,EAAEA;IAAU;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAC9B7B,OAAA,CAACH,YAAY;MAACkB,IAAI,EAAEN,kBAAmB;MAACC,SAAS,EAAEA;IAAU;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9D,CAAC;AAEd,CAAC;AAAA3B,EAAA,CAnDKD,IAAI;AAAA6B,EAAA,GAAJ7B,IAAI;AAqDV,eAAeA,IAAI;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}