{"ast":null,"code":"var _jsxFileName = \"/gsoc/git/d3js/src/artist-search/SearchBox.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport SearchDropdown from \"./SearchDropdown\";\nimport ArtistLookup from \"./ArtistLookup\";\nimport \"./SearchBox.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchBox = props => {\n  _s();\n  // State to store the search results (list of artists)\n  const [searchResults, setSearchResults] = React.useState([]);\n  const [searchQuery, setSearchQuery] = React.useState(\"\");\n  const [similarArtistsLimit, setsimilarArtistsLimit] = React.useState(props.currentsimilarArtistsLimit);\n  const [artistMbid, setArtistMbid] = React.useState(props.currentArtistMbid);\n\n  // Lookup the artist based on the query\n  /*const handleQueryChange = async (event: React.ChangeEvent<HTMLInputElement>): Promise<void> => {\n      let query = event.currentTarget.value;\n      if(query.trim() !== \"\") {\n      const searchResults = await ArtistLookup(query);\n      setSearchResults(searchResults ?? []);\n      }\n  }*/\n  const getArtists = async () => {\n    if (searchQuery !== \"\" || searchQuery.trim() !== \"\") {\n      const searchResults = await ArtistLookup(searchQuery);\n      setSearchResults(searchResults !== null && searchResults !== void 0 ? searchResults : []);\n    }\n  };\n  // Lookup the artist based on the query\n  useEffect(() => {\n    getArtists();\n  }, [searchQuery]);\n  // Set similarArtistsLimit based on user input\n  const handlesimilarArtistsLimitChange = event => {\n    let similarArtistsLimit = event.currentTarget.valueAsNumber;\n    setsimilarArtistsLimit(similarArtistsLimit);\n  };\n  // Set the artist and similarArtistsLimit based on user input\n  useEffect(() => {\n    props.onsimilarArtistsLimitChange(similarArtistsLimit);\n    props.onArtistChange(artistMbid);\n  }, [similarArtistsLimit, artistMbid]);\n\n  // Hide the dropdown when the user clicks outside of it\n  const toggleDropdown = () => {\n    const dropdown = document.getElementById(\"search-dropdown\");\n    (dropdown === null || dropdown === void 0 ? void 0 : dropdown.style.display) === \"flex\" ? dropdown.style.display = \"none\" : dropdown.style.display = \"flex\";\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"search-box\",\n    autoComplete: \"off\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"artist-input\"\n      //onClick={(e) => {const dd = document.getElementById(\"search-dropdown\"); dd?.style.display === \"flex\" ? dd.style.display = \"none\" : dd!.style.display = \"flex\";}}\n      ,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"artist-input-name\",\n        type: \"search\",\n        \"aria-expanded\": \"false\",\n        \"aria-controls\": \"search-dropdown\",\n        name: \"artist_mbid\",\n        placeholder: \"Artist name\",\n        onChange: e => {\n          setSearchQuery(e.currentTarget.value);\n        },\n        onFocus: toggleDropdown\n        //onBlur={toggleDropdown}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SearchDropdown, {\n        searchResults: searchResults,\n        onArtistChange: setArtistMbid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"graph-size-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        id: \"graph-size-input-label\",\n        children: \"Web size:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"graph-size-input-number\",\n        type: \"number\",\n        name: \"similarArtistsLimit\",\n        placeholder: \"Graph size\",\n        min: \"1\",\n        max: \"25\",\n        onChange: handlesimilarArtistsLimitChange,\n        defaultValue: similarArtistsLimit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"graph-size-input-warning\",\n        className: \"validity\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n\n  /*return(\n      <>\n          <InputGroup>\n              <Form.Control type=\"search\" placeholder=\"Artist Name\" onChange={handleQueryChange}/>\n          </InputGroup>\n          <SearchDropdown searchResults={searchResults} onArtistChange={props.onArtistChange}/>\n          <InputGroup>\n              <Form.Control type=\"number\" placeholder=\"Graph Size\" min=\"1\" max=\"25\" onChange={handlesimilarArtistsLimitChange} defaultValue={similarArtistsLimit}/>\n          </InputGroup>\n      </>\n  );*/\n};\n_s(SearchBox, \"U00pHvwD2/Qh8c67ln7wXSa7N2k=\");\n_c = SearchBox;\nexport default SearchBox;\nvar _c;\n$RefreshReg$(_c, \"SearchBox\");","map":{"version":3,"names":["React","useEffect","SearchDropdown","ArtistLookup","jsxDEV","_jsxDEV","SearchBox","props","_s","searchResults","setSearchResults","useState","searchQuery","setSearchQuery","similarArtistsLimit","setsimilarArtistsLimit","currentsimilarArtistsLimit","artistMbid","setArtistMbid","currentArtistMbid","getArtists","trim","handlesimilarArtistsLimitChange","event","currentTarget","valueAsNumber","onsimilarArtistsLimitChange","onArtistChange","toggleDropdown","dropdown","document","getElementById","style","display","className","autoComplete","children","id","type","name","placeholder","onChange","e","value","onFocus","fileName","_jsxFileName","lineNumber","columnNumber","min","max","defaultValue","_c","$RefreshReg$"],"sources":["/gsoc/git/d3js/src/artist-search/SearchBox.tsx"],"sourcesContent":["import React, { useEffect, useMemo } from \"react\";\nimport SearchDropdown from \"./SearchDropdown\";\nimport ArtistLookup from \"./ArtistLookup\";\nimport { ArtistType } from \"./ArtistLookup\";\nimport \"./SearchBox.css\";\nimport { get } from \"lodash\";\ninterface SearchBoxProps {\n    currentsimilarArtistsLimit: number;\n    onsimilarArtistsLimitChange: (similarArtistsLimit: number) => void;\n    currentArtistMbid: string;\n    onArtistChange: (artist_mbid: string) => void;\n}\n\nconst SearchBox = (props: SearchBoxProps) => {\n    // State to store the search results (list of artists)\n    const [searchResults, setSearchResults] = React.useState<Array<ArtistType>>([]);\n    const [searchQuery, setSearchQuery] = React.useState<string>(\"\");\n    const [similarArtistsLimit, setsimilarArtistsLimit] = React.useState<number>(props.currentsimilarArtistsLimit);\n    const [artistMbid, setArtistMbid] = React.useState<string>(props.currentArtistMbid);\n\n    // Lookup the artist based on the query\n    /*const handleQueryChange = async (event: React.ChangeEvent<HTMLInputElement>): Promise<void> => {\n        let query = event.currentTarget.value;\n        if(query.trim() !== \"\") {\n        const searchResults = await ArtistLookup(query);\n        setSearchResults(searchResults ?? []);\n        }\n    }*/\n    const getArtists = async () => {\n        if(searchQuery !== \"\" || searchQuery.trim() !== \"\"){\n            const searchResults = await ArtistLookup(searchQuery);\n            setSearchResults(searchResults ?? []);\n        }\n    }\n    // Lookup the artist based on the query\n    useEffect(() => {\n        getArtists();\n    }, [searchQuery]);\n    // Set similarArtistsLimit based on user input\n    const handlesimilarArtistsLimitChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n        let similarArtistsLimit = event.currentTarget.valueAsNumber;\n        setsimilarArtistsLimit(similarArtistsLimit);\n    }\n    // Set the artist and similarArtistsLimit based on user input\n    useEffect(() => {\n        props.onsimilarArtistsLimitChange(similarArtistsLimit);\n        props.onArtistChange(artistMbid);\n    }, [similarArtistsLimit, artistMbid]);\n\n    // Hide the dropdown when the user clicks outside of it\n    const toggleDropdown = () => {\n        const dropdown = document.getElementById(\"search-dropdown\");\n        dropdown?.style.display === \"flex\" ? dropdown.style.display = \"none\" : dropdown!.style.display = \"flex\";\n    }\n\n    return (\n        <form\n        className=\"search-box\"\n        autoComplete=\"off\"\n        >\n            <div\n            className=\"artist-input\"\n            //onClick={(e) => {const dd = document.getElementById(\"search-dropdown\"); dd?.style.display === \"flex\" ? dd.style.display = \"none\" : dd!.style.display = \"flex\";}}\n            >\n                <input \n                id=\"artist-input-name\" \n                type=\"search\"\n                aria-expanded=\"false\" \n                aria-controls=\"search-dropdown\"\n                name=\"artist_mbid\" \n                placeholder=\"Artist name\" \n                onChange={(e) => {setSearchQuery(e.currentTarget.value)}}\n                onFocus={toggleDropdown}\n                //onBlur={toggleDropdown}\n                />   \n                <SearchDropdown searchResults={searchResults} onArtistChange={setArtistMbid}/>\n            </div>\n            <div\n            className=\"graph-size-input\"\n            >\n            <label id=\"graph-size-input-label\">Web size:</label>\n            <input id=\"graph-size-input-number\" type=\"number\" name=\"similarArtistsLimit\" placeholder=\"Graph size\" min=\"1\" max=\"25\"  onChange={handlesimilarArtistsLimitChange} defaultValue={similarArtistsLimit}/>\n            <span id=\"graph-size-input-warning\" className=\"validity\"></span>\n            </div>\n        </form>\n\n    );\n\n\n    /*return(\n        <>\n            <InputGroup>\n                <Form.Control type=\"search\" placeholder=\"Artist Name\" onChange={handleQueryChange}/>\n            </InputGroup>\n            <SearchDropdown searchResults={searchResults} onArtistChange={props.onArtistChange}/>\n            <InputGroup>\n                <Form.Control type=\"number\" placeholder=\"Graph Size\" min=\"1\" max=\"25\" onChange={handlesimilarArtistsLimitChange} defaultValue={similarArtistsLimit}/>\n            </InputGroup>\n        </>\n    );*/\n}\nexport default SearchBox;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}