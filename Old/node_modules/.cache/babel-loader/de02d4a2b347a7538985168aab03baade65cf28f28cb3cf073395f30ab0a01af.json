{"ast":null,"code":"var _jsxFileName = \"/gsoc/git/d3js/src/NetworkChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { ResponsiveNetwork } from '@nivo/network';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NetworkChart = data => {\n  _s();\n  const [chartData, setData] = useState(data);\n  const handleNodeClick = node => {\n    console.log(node.id);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '500px'\n    },\n    children: /*#__PURE__*/_jsxDEV(ResponsiveNetwork, {\n      data: chartData,\n      width: 1000,\n      height: 1000,\n      repulsivity: 30,\n      iterations: 10,\n      centeringStrength: 0.1,\n      nodeBorderWidth: 2,\n      linkThickness: 2,\n      motionStiffness: 160,\n      motionDamping: 12,\n      nodeSize: 20,\n      activeNodeSize: 40,\n      inactiveNodeSize: 10,\n      isInteractive: true,\n      onClick: node => handleNodeClick(node),\n      onMouseEnter: node => console.log(node),\n      colors: 'red'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_s(NetworkChart, \"crZHr0fmz3voCHSKs4XFwkRGqTo=\");\n_c = NetworkChart;\nexport default NetworkChart;\nvar _c;\n$RefreshReg$(_c, \"NetworkChart\");","map":{"version":3,"names":["React","useState","ResponsiveNetwork","jsxDEV","_jsxDEV","NetworkChart","data","_s","chartData","setData","handleNodeClick","node","console","log","id","style","height","children","width","repulsivity","iterations","centeringStrength","nodeBorderWidth","linkThickness","motionStiffness","motionDamping","nodeSize","activeNodeSize","inactiveNodeSize","isInteractive","onClick","onMouseEnter","colors","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/gsoc/git/d3js/src/NetworkChart.js"],"sourcesContent":["import React, {useState} from 'react';\nimport { ResponsiveNetwork } from '@nivo/network';\n\nconst NetworkChart = (data) => {\n  \n  const [chartData, setData] = useState(data);\n\n  const handleNodeClick = (node) => {\n    console.log(node.id);\n  };\n  return (\n    <div style={{ height: '500px' }}>\n      <ResponsiveNetwork\n        data={chartData}\n        width={1000}\n        height={1000}\n        repulsivity={30}\n        iterations={10}\n        centeringStrength={0.1}\n        nodeBorderWidth={2}\n        linkThickness={2}\n        motionStiffness={160}\n        motionDamping={12}\n        nodeSize={20}\n        activeNodeSize={40}\n        inactiveNodeSize={10}\n        isInteractive={true}\n        onClick={(node) => handleNodeClick(node)}\n        onMouseEnter={(node) => console.log(node)}\n        colors={'red'}\n      />\n    </div>\n  );\n};\n\n\nexport default NetworkChart;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,SAASC,iBAAiB,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,YAAY,GAAIC,IAAI,IAAK;EAAAC,EAAA;EAE7B,MAAM,CAACC,SAAS,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAACK,IAAI,CAAC;EAE3C,MAAMI,eAAe,GAAIC,IAAI,IAAK;IAChCC,OAAO,CAACC,GAAG,CAACF,IAAI,CAACG,EAAE,CAAC;EACtB,CAAC;EACD,oBACEV,OAAA;IAAKW,KAAK,EAAE;MAAEC,MAAM,EAAE;IAAQ,CAAE;IAAAC,QAAA,eAC9Bb,OAAA,CAACF,iBAAiB;MAChBI,IAAI,EAAEE,SAAU;MAChBU,KAAK,EAAE,IAAK;MACZF,MAAM,EAAE,IAAK;MACbG,WAAW,EAAE,EAAG;MAChBC,UAAU,EAAE,EAAG;MACfC,iBAAiB,EAAE,GAAI;MACvBC,eAAe,EAAE,CAAE;MACnBC,aAAa,EAAE,CAAE;MACjBC,eAAe,EAAE,GAAI;MACrBC,aAAa,EAAE,EAAG;MAClBC,QAAQ,EAAE,EAAG;MACbC,cAAc,EAAE,EAAG;MACnBC,gBAAgB,EAAE,EAAG;MACrBC,aAAa,EAAE,IAAK;MACpBC,OAAO,EAAGnB,IAAI,IAAKD,eAAe,CAACC,IAAI,CAAE;MACzCoB,YAAY,EAAGpB,IAAI,IAAKC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAE;MAC1CqB,MAAM,EAAE;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAC7B,EAAA,CA9BIF,YAAY;AAAAgC,EAAA,GAAZhC,YAAY;AAiClB,eAAeA,YAAY;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}