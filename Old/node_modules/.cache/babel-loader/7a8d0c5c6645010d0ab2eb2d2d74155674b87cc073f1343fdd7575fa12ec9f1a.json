{"ast":null,"code":"var _jsxFileName = \"/gsoc/git/d3js/src/Data.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport NetworkChart from \"./NetworkChart\";\nimport Network from \"./Network\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Data = props => {\n  _s();\n  var artist_mbid = \"b8a7c51f-362c-4dcb-a259-bc6e0095f0a6\";\n  if (props.artist !== undefined) {\n    artist_mbid = props.artist;\n  }\n  const url = \"https://labs.api.listenbrainz.org/similar-artists/json?algorithm=session_based_days_7500_session_300_contribution_5_threshold_10_limit_100_filter_True_skip_30&artist_mbid=\" + artist_mbid;\n  const [similarArtists, setSimilarArtists] = useState([]);\n  const [artist, setArtist] = useState(\"\");\n  const fetchData = () => {\n    fetch(url).then(response => response.json()).then(data => setData(data));\n  };\n  const setData = data => {\n    setArtist(data[1]);\n    setSimilarArtists(data[3]);\n    createLists();\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const createLists = () => {\n    var artistList = similarArtists && similarArtists.data && similarArtists.data.map(artist => artist.name);\n    var mainArtist = artist && artist.data && artist.data[0].name;\n    artistList && artistList.push(mainArtist);\n    var transformedArtists = {};\n    transformedArtists = artistList && {\n      \"nodes\": artistList.map(artist => {\n        return {\n          \"id\": artist\n        };\n      }),\n      \"links\": artistList.map(artist => {\n        return {\n          \"source\": mainArtist,\n          \"target\": artist\n        };\n      })\n    };\n  };\n  const createGraph = () => {\n    console.log(artist_mbid);\n    artist_mbid = document.getElementById(\"artist_name\").value;\n    console.log(document.getElementById(\"artist_name\").value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Enter artist mbid:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"artist_name\",\n        name: \"artist_name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: createGraph,\n      children: \"Create graph\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NetworkChart, {\n      data: transformedArtists\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n_s(Data, \"QGC6pfeN9kngUkSusChZ+5ra1A8=\");\n_c = Data;\nexport default Data;\nvar _c;\n$RefreshReg$(_c, \"Data\");","map":{"version":3,"names":["React","useState","useEffect","NetworkChart","Network","jsxDEV","_jsxDEV","Data","props","_s","artist_mbid","artist","undefined","url","similarArtists","setSimilarArtists","setArtist","fetchData","fetch","then","response","json","data","setData","createLists","artistList","map","name","mainArtist","push","transformedArtists","createGraph","console","log","document","getElementById","value","children","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onClick","_c","$RefreshReg$"],"sources":["/gsoc/git/d3js/src/Data.js"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport NetworkChart from \"./NetworkChart\";\nimport Network from \"./Network\";\nconst Data = (props) => {\n    var artist_mbid = \"b8a7c51f-362c-4dcb-a259-bc6e0095f0a6\";\n    if(props.artist !== undefined) {\n        artist_mbid = props.artist;\n    }\n    const url = \"https://labs.api.listenbrainz.org/similar-artists/json?algorithm=session_based_days_7500_session_300_contribution_5_threshold_10_limit_100_filter_True_skip_30&artist_mbid=\"+artist_mbid;\n    const [similarArtists, setSimilarArtists] = useState([]);\n    const [artist, setArtist] = useState(\"\");\n\n    const fetchData = () => {\n        fetch(url)\n        .then((response) => response.json())\n        .then((data) => setData(data))   \n    }\n    \n    const setData = (data) => {\n        setArtist(data[1]);\n        setSimilarArtists(data[3]);\n        createLists();\n    }\n    \n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    \n\n    const createLists = () => {   \n        var artistList = similarArtists && similarArtists.data && (similarArtists.data.map((artist) => artist.name));\n        var mainArtist = artist && artist.data && artist.data[0].name;\n        artistList && artistList.push(mainArtist);\n        var transformedArtists = {}; \n        transformedArtists = artistList && {\n            \"nodes\": artistList.map((artist) => {\n                return{\n                    \"id\": artist,\n                };\n            }),\n            \"links\": artistList.map((artist) => {\n                return{\n                    \"source\": mainArtist,\n                    \"target\": artist\n                };\n            }),\n        }\n    }\n    \n\n    const createGraph = () => {\n        console.log(artist_mbid);\n        artist_mbid = document.getElementById(\"artist_name\").value;\n        console.log(document.getElementById(\"artist_name\").value);\n    }\n\n    return (\n        <div>\n            <form> \n                <label>\n                    Enter artist mbid:\n                </label>              \n                <input type=\"text\" id=\"artist_name\" name=\"artist_name\"></input>  \n            </form>\n            <button onClick={createGraph}>Create graph</button>\n            <NetworkChart data={transformedArtists}/>\n        </div>\n    );\n}\n\nexport default Data;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}