{"ast":null,"code":"var _jsxFileName = \"/gsoc/git/d3js/src/Data.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Graph from \"./Graph\";\nimport Input from \"./Input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Data = () => {\n  _s();\n  const LIMIT_VALUE = 18;\n  var artist_mbid = \"8f6bd1e4-fbe1-4f50-aa9b-94c450ec0f11\";\n  var url = \"https://labs.api.listenbrainz.org/similar-artists/json?algorithm=session_based_days_7500_session_300_contribution_5_threshold_10_limit_100_filter_True_skip_30&artist_mbid=\";\n  const [similarArtists, setSimilarArtists] = useState([]);\n  const [artist, setArtist] = useState(\"\");\n  const [limit, setLimit] = useState(LIMIT_VALUE);\n  var transformedArtists = {};\n  const fetchData = artist_mbid => {\n    fetch(url + artist_mbid).then(response => response.json()).then(data => setData(data));\n  };\n  const setData = data => {\n    setArtist(data[1]);\n    setSimilarArtists(data[3]);\n  };\n  useEffect(() => {\n    fetchData(artist_mbid);\n  }, []);\n  var scoreList;\n  var artistList = similarArtists && similarArtists.data && similarArtists.data.map(artist => artist);\n  artistList = artistList && artistList.splice(0, limit);\n  var mainArtist = artist && artist.data && artist.data[0];\n  artistList && artistList.push(mainArtist);\n  console.log(artistList);\n  transformedArtists = artistList && {\n    \"nodes\": artistList.map((artist, index) => {\n      return {\n        \"id\": artist.name,\n        \"artist_mbid\": artist.artist_mbid,\n        \"size\": artist.artist_mbid === mainArtist.artist_mbid ? 150 : 85,\n        \"color\": artist.artist_mbid === mainArtist.artist_mbid ? \"#00A6A6\" : index < limit / 3 ? \"#F7B2AD\" : index < limit / 3 * 2 ? \"#7D84B2\" : \"#E3D985\",\n        \"seed\": artist.artist_mbid === mainArtist.artist_mbid ? 1 : 0,\n        \"score\": artist.score\n      };\n    }),\n    \"links\": artistList.map((artist, index) => {\n      scoreList.push(artist.score);\n      return {\n        \"source\": mainArtist.name,\n        \"target\": artist.name,\n        \"distance\": artist.artist_mbid != mainArtist.artist_mbid ? Math.log(artist.score) * 30 : 0,\n        \"strength\": artist.score < 5000 ? 2 : artist.score < 6000 ? 4 : 8\n      };\n    })\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      fetchData: fetchData,\n      setLimit: setLimit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Graph, {\n      data: transformedArtists,\n      fetchData: fetchData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n_s(Data, \"rS4tKU6+urwfRRzkk/W6KU1MsKg=\");\n_c = Data;\nexport default Data;\nvar _c;\n$RefreshReg$(_c, \"Data\");","map":{"version":3,"names":["React","useState","useEffect","Graph","Input","jsxDEV","_jsxDEV","Data","_s","LIMIT_VALUE","artist_mbid","url","similarArtists","setSimilarArtists","artist","setArtist","limit","setLimit","transformedArtists","fetchData","fetch","then","response","json","data","setData","scoreList","artistList","map","splice","mainArtist","push","console","log","index","name","score","Math","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/gsoc/git/d3js/src/Data.js"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport Graph from \"./Graph\";\nimport Input from \"./Input\";\nconst Data = () => {\n    const LIMIT_VALUE = 18;\n    var artist_mbid = \"8f6bd1e4-fbe1-4f50-aa9b-94c450ec0f11\";\n    var url = \"https://labs.api.listenbrainz.org/similar-artists/json?algorithm=session_based_days_7500_session_300_contribution_5_threshold_10_limit_100_filter_True_skip_30&artist_mbid=\";\n    const [similarArtists, setSimilarArtists] = useState([]);\n    const [artist, setArtist] = useState(\"\");\n    const [limit, setLimit] = useState(LIMIT_VALUE);\n    var transformedArtists = {}; \n\n    const fetchData = (artist_mbid) => {\n        fetch(url + artist_mbid)\n        .then((response) => response.json())\n        .then((data) => setData(data))   \n    }\n    \n    const setData = (data) => {\n        setArtist(data[1]);\n        setSimilarArtists(data[3]);\n    }\n    \n    useEffect(() => {\n        fetchData(artist_mbid);\n    }, []);\n\n    var scoreList;  \n    var artistList = similarArtists && similarArtists.data && (similarArtists.data.map((artist) => artist));\n    artistList = artistList && artistList.splice(0, limit);\n    var mainArtist = artist && artist.data && artist.data[0];\n    artistList && artistList.push(mainArtist);\n    console.log(artistList);    \n    transformedArtists = artistList && {\n        \"nodes\": artistList.map((artist, index) => {\n            return {\n                \"id\": artist.name,\n                \"artist_mbid\": artist.artist_mbid,\n                \"size\": artist.artist_mbid === mainArtist.artist_mbid ? 150 : 85,\n                \"color\": artist.artist_mbid === mainArtist.artist_mbid ? \"#00A6A6\" : index < limit/3 ? \"#F7B2AD\" : index < limit/3*2 ? \"#7D84B2\" : \"#E3D985\",\n                \"seed\": artist.artist_mbid === mainArtist.artist_mbid ? 1 : 0,\n                \"score\": artist.score\n            };\n        }),\n        \"links\": artistList.map((artist, index) => {\n            scoreList.push(artist.score);\n            return {\n                \"source\": mainArtist.name,\n                \"target\": artist.name,\n                \"distance\": (artist.artist_mbid != mainArtist.artist_mbid ? Math.log(artist.score) * 30 : 0),\n                \"strength\": artist.score < 5000 ? 2 : artist.score < 6000 ? 4 : 8,\n                };\n        }),\n    }\n\n    return (\n        <div>\n            <Input fetchData={fetchData} setLimit={setLimit}/>\n            <Graph data={transformedArtists} fetchData={fetchData}/>\n        </div>\n    );\n}\n\nexport default Data;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}