{"ast":null,"code":"var _jsxFileName = \"/gsoc/git/d3js/src/artist-search/SearchBox.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo } from \"react\";\nimport SearchDropdown from \"./SearchDropdown\";\nimport { throttle } from \"lodash\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Input = props => {\n  _s();\n  // State to store the user query (input)\n  const [searchQuery, setSearchQuery] = React.useState(\"\");\n  // State to store the search results (list of artists)\n  const [searchResults, setSearchResults] = React.useState([]);\n  const [limit, setLimit] = React.useState();\n  const [artist, setArtist] = React.useState();\n  // The URL for the MusicBrainz API\n  const LOOKUP_URL = `https://musicbrainz.org/ws/2/artist/?query=artist:${searchQuery}&fmt=json&limit=10`;\n  const UNDEFINED_PROPERTY = \"Unknown\";\n\n  // Fetches the artists from the MusicBrainz API\n  const fetchArtists = useMemo(() => throttle(async () => {\n    try {\n      const response = await fetch(LOOKUP_URL);\n      const data = await response.json();\n      setData(data);\n    } catch (error) {\n      alert(error);\n    }\n  }, 800, {\n    leading: false,\n    trailing: true\n  }), [setSearchResults, LOOKUP_URL]);\n  const setData = dataResponse => {\n    setSearchResults(dataResponse.artists.map(artist => {\n      var _artist$id, _artist$type, _artist$name, _artist$country;\n      return {\n        id: (_artist$id = artist.id) !== null && _artist$id !== void 0 ? _artist$id : UNDEFINED_PROPERTY,\n        type: (_artist$type = artist.type) !== null && _artist$type !== void 0 ? _artist$type : UNDEFINED_PROPERTY,\n        name: (_artist$name = artist.name) !== null && _artist$name !== void 0 ? _artist$name : UNDEFINED_PROPERTY,\n        country: (_artist$country = artist.country) !== null && _artist$country !== void 0 ? _artist$country : UNDEFINED_PROPERTY\n      };\n    }));\n  };\n  useEffect(() => {\n    if (searchQuery && searchQuery.trim() !== \"\") {\n      fetchArtists();\n    } else {\n      setSearchResults([]);\n    }\n  }, [searchQuery]);\n  const handleInput = event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    var artist_mbid = form.artist_mbid.value;\n    var limit = form.limit.value;\n    props.onLimitChange(limit);\n    if ((artist === null || artist === void 0 ? void 0 : artist.id) !== undefined) props.onArtistChange(artist.id);\n  };\n  const setGraphLimit = event => {\n    var limit = event.currentTarget.value;\n    var limitInt = parseInt(limit);\n    console.log(limit);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleInput,\n    autoComplete: \"off\",\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"left\",\n      height: \"4vh\",\n      padding: \"1vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"4vh\",\n        width: \"20vh\"\n      },\n      onClick: e => {\n        const dd = document.getElementById(\"search-dropdown\");\n        (dd === null || dd === void 0 ? void 0 : dd.style.display) === \"flex\" ? dd.style.display = \"none\" : dd.style.display = \"flex\";\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"artist-input\",\n        style: {\n          height: \"inherit\",\n          width: \"inherit\"\n        },\n        type: \"search\",\n        name: \"artist_mbid\",\n        placeholder: \"Artist name\",\n        onChange: e => setSearchQuery(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SearchDropdown, {\n        searchResults: searchResults,\n        onArtistChange: setArtist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      style: {\n        height: \"inherit\"\n      },\n      type: \"number\",\n      name: \"limit\",\n      placeholder: \"Graph size\",\n      min: \"1\",\n      max: \"50\",\n      onChange: setGraphLimit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Generate graph\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n};\n_s(Input, \"RTydZ6VLvsmx2MrNtVLj+C2ibzE=\");\n_c = Input;\nexport default Input;\nvar _c;\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"names":["React","useEffect","useMemo","SearchDropdown","throttle","jsxDEV","_jsxDEV","Input","props","_s","searchQuery","setSearchQuery","useState","searchResults","setSearchResults","limit","setLimit","artist","setArtist","LOOKUP_URL","UNDEFINED_PROPERTY","fetchArtists","response","fetch","data","json","setData","error","alert","leading","trailing","dataResponse","artists","map","_artist$id","_artist$type","_artist$name","_artist$country","id","type","name","country","trim","handleInput","event","preventDefault","form","currentTarget","artist_mbid","value","onLimitChange","undefined","onArtistChange","setGraphLimit","limitInt","parseInt","console","log","onSubmit","autoComplete","style","display","flexDirection","justifyContent","height","padding","children","width","onClick","e","dd","document","getElementById","placeholder","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","min","max","_c","$RefreshReg$"],"sources":["/gsoc/git/d3js/src/artist-search/SearchBox.tsx"],"sourcesContent":["import React, { useEffect, useMemo } from \"react\";\nimport SearchDropdown from \"./SearchDropdown\";\nimport { throttle } from \"lodash\";\ninterface InputProps {\n    onLimitChange: (limit: number) => void;\n    onArtistChange: (artist_mbid: string) => void;\n}\n\ntype ArtistType = {\n    name: string;\n    id: string;\n    type?: string;\n    country?: string;\n}\n\ntype ArtistLookupResponseType = {\n    created: string;\n    count: number;\n    offset: number;\n    artists: Array<ArtistType>;\n}\n\nconst Input = (props: InputProps) => {\n    // State to store the user query (input)\n    const [searchQuery, setSearchQuery] = React.useState<string>(\"\");\n    // State to store the search results (list of artists)\n    const [searchResults, setSearchResults] = React.useState<Array<ArtistType>>([]);\n    const [limit, setLimit] = React.useState<number>();\n    const [artist, setArtist] = React.useState<ArtistType>();\n    // The URL for the MusicBrainz API\n    const LOOKUP_URL = `https://musicbrainz.org/ws/2/artist/?query=artist:${searchQuery}&fmt=json&limit=10`;\n    const UNDEFINED_PROPERTY = \"Unknown\";\n\n    // Fetches the artists from the MusicBrainz API\n    const fetchArtists = useMemo(\n        () =>\n        throttle(\n        async(): Promise<void> => {\n        try {\n            const response = await fetch(LOOKUP_URL);\n            const data = await response.json();\n            setData(data);\n        }\n        catch(error){\n            alert(error);\n        }\n    }, 800, {leading: false, trailing: true}), \n    [setSearchResults, LOOKUP_URL]);\n    \n    const setData = (dataResponse: ArtistLookupResponseType): void => {\n         setSearchResults(dataResponse.artists.map((artist) => {\n            return {\n                id: artist.id ?? UNDEFINED_PROPERTY,\n                type: artist.type ?? UNDEFINED_PROPERTY,\n                name: artist.name ?? UNDEFINED_PROPERTY,\n                country: artist.country ?? UNDEFINED_PROPERTY,\n            };\n        }));\n    }\n\n    useEffect(() => {\n        if(searchQuery && searchQuery.trim() !== \"\"){\n            fetchArtists();\n        }\n        else{\n            setSearchResults([]);\n        }\n    }, [searchQuery]);\n    \n    const handleInput = (event: React.FormEvent<HTMLFormElement>): void => {\n        event.preventDefault();\n        const form = event.currentTarget;\n        var artist_mbid = form.artist_mbid.value;\n        var limit = form.limit.value;\n\n        props.onLimitChange(limit);\n        if(artist?.id !== undefined)\n            props.onArtistChange(artist.id);\n    }\n\n    const setGraphLimit = (event: React.FormEvent<HTMLInputElement>): void => {\n        var limit = event.currentTarget.value;\n        var limitInt = parseInt(limit);\n        console.log(limit);\n    }\n\n    return (\n        <form \n        onSubmit={handleInput}\n        autoComplete=\"off\"\n        style={\n            {\n                display: \"flex\", \n                flexDirection: \"row\",\n                justifyContent: \"left\",\n                height: \"4vh\",\n                padding: \"1vh\"\n            }\n        }\n        >\n            <div\n            style={\n                {\n                    height: \"4vh\",\n                    width: \"20vh\",\n                }\n            }\n            onClick={(e) => {const dd = document.getElementById(\"search-dropdown\"); dd?.style.display === \"flex\" ? dd.style.display = \"none\" : dd!.style.display = \"flex\";}}\n            >\n                <input id=\"artist-input\" style={{height: \"inherit\", width: \"inherit\"}} type=\"search\" name=\"artist_mbid\" placeholder=\"Artist name\" onChange={e => setSearchQuery(e.target.value)}/>   \n                <SearchDropdown searchResults={searchResults} onArtistChange={setArtist}/>\n            </div>\n            <input style={{height: \"inherit\"}}type=\"number\" name=\"limit\" placeholder=\"Graph size\" min=\"1\" max=\"50\" onChange={setGraphLimit}/>\n            <button type=\"submit\">Generate graph</button>\n        </form>\n\n    );\n}\n\nexport default Input;\nexport type { ArtistType };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}