{"ast":null,"code":"var _jsxFileName = \"/gsoc/git/d3js/src/SimilarArtistsGraph.tsx\";\nimport React from 'react';\nimport { ResponsiveNetwork } from '@nivo/network';\nimport { animated, to } from '@react-spring/web';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SimilarArtistsGraph = props => {\n  const MAX_LINES = 2;\n  const MAX_WORD_LENGTH = 10;\n  const CustomNodeComponent = _ref => {\n    let {\n      node,\n      animated: animatedProps,\n      onClick,\n      onMouseEnter,\n      onMouseMove,\n      onMouseLeave\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(animated.g, {\n      transform: to([animatedProps.x, animatedProps.y, animatedProps.scale], (x, y, scale) => {\n        return `translate(${x},${y}) scale(${scale})`;\n      }),\n      onClick: onClick ? event => onClick(node, event) : undefined,\n      onMouseEnter: onMouseEnter ? event => onMouseEnter(node, event) : undefined,\n      onMouseMove: onMouseMove ? event => onMouseMove(node, event) : undefined,\n      onMouseLeave: onMouseLeave ? event => onMouseLeave(node, event) : undefined,\n      width: to([animatedProps.size], size => size / 2),\n      height: to([animatedProps.size], size => size / 2),\n      children: [/*#__PURE__*/_jsxDEV(animated.circle, {\n        \"data-testid\": `node.${node.id}`,\n        r: to([animatedProps.size], size => size / 2),\n        fill: animatedProps.color,\n        strokeWidth: animatedProps.borderWidth,\n        stroke: animatedProps.borderColor,\n        opacity: animatedProps.opacity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(animated.text, {\n        textAnchor: \"middle\",\n        dominantBaseline: \"alphabetic\",\n        fontSize: to([animatedProps.size], size => size / 6),\n        style: {\n          pointerEvents: 'none',\n          fill: 'white'\n        },\n        children:\n        // SVG text does not allow for easy multi line text\n        // So, we split the text into words and render each word as a separate tspan element in a different line\n        // We use ellipsis if word length exceeds MAX_WORD_LENGTH or if number of words(each in a separate line) exceed MAX_LINES\n        node.id.split(\" \").map((word, index) => index < MAX_LINES ? /*#__PURE__*/_jsxDEV(animated.tspan, {\n          x: 0,\n          dy: index === 0 ? \"0\" : to([animatedProps.size], size => size / 6),\n          children: word.length > MAX_WORD_LENGTH ? word.substring(0, MAX_WORD_LENGTH - 3) + \"...\" : word\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this) : index == MAX_LINES && /*#__PURE__*/_jsxDEV(animated.tspan, {\n          x: 0,\n          dy: to([animatedProps.size], size => size / 6),\n          children: \"...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 39\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this);\n  };\n  const CustomNodeTooltipComponent = _ref2 => {\n    let {\n      node\n    } = _ref2;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        background: node.color,\n        color: '#ffffff',\n        padding: '9px 12px',\n        borderRadius: '3px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: node.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this), node.data.score != Infinity && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\"Score: \", node.data.score]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this);\n  };\n  const chartProperties = {\n    data: props.data,\n    height: window.innerHeight,\n    width: window.innerWidth,\n    margin: {\n      top: 0,\n      right: 100,\n      bottom: 0,\n      left: 0\n    },\n    repulsivity: 350,\n    iterations: 120,\n    centeringStrength: 0.11,\n    nodeBorderWidth: 5,\n    linkThickness: 2,\n    distanceMin: 20,\n    distanceMax: 550,\n    nodeColor: node => node.color,\n    linkColor: {\n      from: 'source.color',\n      modifiers: [['darker', 1]]\n    },\n    linkDistance: link => link.distance,\n    nodeSize: node => node.size,\n    activeNodeSize: node => node.size * 1.2,\n    inactiveNodeSize: node => node.size / 1.2,\n    isInteractive: true,\n    onClick: node => props.onArtistChange(node.data.artist_mbid)\n  };\n  return props.data ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"graph-container\",\n    style: {\n      background: props.background\n    },\n    children: /*#__PURE__*/_jsxDEV(ResponsiveNetwork, {\n      ...chartProperties,\n      nodeComponent: CustomNodeComponent,\n      nodeTooltip: CustomNodeTooltipComponent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Please wait...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 9\n  }, this);\n};\n_c = SimilarArtistsGraph;\nexport default SimilarArtistsGraph;\nvar _c;\n$RefreshReg$(_c, \"SimilarArtistsGraph\");","map":{"version":3,"names":["React","ResponsiveNetwork","animated","to","jsxDEV","_jsxDEV","Fragment","_Fragment","SimilarArtistsGraph","props","MAX_LINES","MAX_WORD_LENGTH","CustomNodeComponent","_ref","node","animatedProps","onClick","onMouseEnter","onMouseMove","onMouseLeave","g","transform","x","y","scale","event","undefined","width","size","height","children","circle","id","r","fill","color","strokeWidth","borderWidth","stroke","borderColor","opacity","fileName","_jsxFileName","lineNumber","columnNumber","text","textAnchor","dominantBaseline","fontSize","style","pointerEvents","split","map","word","index","tspan","dy","length","substring","CustomNodeTooltipComponent","_ref2","background","padding","borderRadius","data","score","Infinity","chartProperties","window","innerHeight","innerWidth","margin","top","right","bottom","left","repulsivity","iterations","centeringStrength","nodeBorderWidth","linkThickness","distanceMin","distanceMax","nodeColor","linkColor","from","modifiers","linkDistance","link","distance","nodeSize","activeNodeSize","inactiveNodeSize","isInteractive","onArtistChange","artist_mbid","className","nodeComponent","nodeTooltip","_c","$RefreshReg$"],"sources":["/gsoc/git/d3js/src/SimilarArtistsGraph.tsx"],"sourcesContent":["import React, {useState} from 'react';\nimport { ResponsiveNetwork, NodeProps, LinkProps, NodeTooltipProps, NetworkSvgProps } from '@nivo/network';\nimport { animated, to } from '@react-spring/web';\nimport { InputNode } from '@nivo/network';\nimport type { NodeType, LinkType, GraphDataType } from './Data';\n\ninterface GraphProps {\n    data: GraphDataType;\n    onArtistChange: (artist_mbid: string) => void;\n    background: string;\n}\n\nconst SimilarArtistsGraph = (props: GraphProps) => {\n    const MAX_LINES = 2;\n    const MAX_WORD_LENGTH = 10;\n    \n    const CustomNodeComponent = <NodeType extends InputNode>({\n        node,\n        animated: animatedProps,\n        onClick,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n    }: NodeProps<NodeType>) => (\n        <animated.g \n        transform={to([animatedProps.x, animatedProps.y, animatedProps.scale], (x, y, scale) => {\n            return `translate(${x},${y}) scale(${scale})`\n        })}\n        onClick={onClick ? event => onClick(node, event) : undefined}\n        onMouseEnter={onMouseEnter ? event => onMouseEnter(node, event) : undefined}\n        onMouseMove={onMouseMove ? event => onMouseMove(node, event) : undefined}\n        onMouseLeave={onMouseLeave ? event => onMouseLeave(node, event) : undefined}\n        width={to([animatedProps.size], size => size / 2)}\n        height={to([animatedProps.size], size => size / 2)}\n        >\n        <animated.circle\n            data-testid={`node.${node.id}`}\n            r={to([animatedProps.size], size => size / 2)}\n            fill={animatedProps.color}\n            strokeWidth={animatedProps.borderWidth}\n            stroke={animatedProps.borderColor}\n            opacity={animatedProps.opacity}\n        />\n        <animated.text \n        textAnchor=\"middle\"\n        dominantBaseline=\"alphabetic\"\n        fontSize={to([animatedProps.size], size => size / 6)}\n        style={{ pointerEvents: 'none', fill: 'white'}}\n        >\n            {\n            // SVG text does not allow for easy multi line text\n            // So, we split the text into words and render each word as a separate tspan element in a different line\n            // We use ellipsis if word length exceeds MAX_WORD_LENGTH or if number of words(each in a separate line) exceed MAX_LINES\n            node.id.split(\" \").map((word, index) => (\n                index < MAX_LINES ?\n                <animated.tspan x={0} dy={index === 0 ? \"0\" : to([animatedProps.size], size => size / 6)}>\n                    {word.length > MAX_WORD_LENGTH ? word.substring(0, MAX_WORD_LENGTH - 3) + \"...\" : word}\n                </animated.tspan>\n                :\n                index == MAX_LINES && <animated.tspan x={0} dy={to([animatedProps.size], size => size / 6)}>\n                    ...\n                </animated.tspan>\n            ))\n            }\n        </animated.text>\n        </animated.g>\n    )\n    \n    const CustomNodeTooltipComponent = ({ node }: NodeTooltipProps<NodeType>) => (\n        <div\n            style={{\n                background: node.color,\n                color: '#ffffff',\n                padding: '9px 12px',\n                borderRadius: '3px'\n            }}\n        >\n            <strong>{node.id}</strong>\n            <br />\n            {node.data.score != Infinity && <>Score: {node.data.score}</>}\n        </div>\n    )\n\n    const chartProperties: NetworkSvgProps<NodeType, LinkType> = {\n        data: props.data,\n        height: window.innerHeight,\n        width: window.innerWidth,\n        margin: { top: 0, right: 100, bottom: 0, left: 0 },\n        repulsivity: 350,\n        iterations: 120,\n        centeringStrength: 0.11,\n        nodeBorderWidth: 5,\n        linkThickness: 2,\n        distanceMin: 20,\n        distanceMax: 550,\n        nodeColor: node => node.color,\n        linkColor: { from: 'source.color' , modifiers: [['darker', 1]]},\n        linkDistance: link => link.distance,\n        nodeSize: node => node.size,\n        activeNodeSize: node => node.size * 1.2,\n        inactiveNodeSize: node => node.size / 1.2,\n        isInteractive: true,\n        onClick: node => props.onArtistChange(node.data.artist_mbid)\n    }\n    \n    return (\n        props.data ?\n        <div\n        className='graph-container' \n        style={{background: props.background }}\n        >\n            <ResponsiveNetwork\n                {...chartProperties}\n                nodeComponent={CustomNodeComponent}\n                nodeTooltip={CustomNodeTooltipComponent}\n            />\n        </div>\n        :\n        <p>\n            Please wait...\n        </p>\n    );\n}\nexport default SimilarArtistsGraph;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}