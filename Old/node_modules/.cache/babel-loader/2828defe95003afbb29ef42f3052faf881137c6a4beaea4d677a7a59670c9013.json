{"ast":null,"code":"var _jsxFileName = \"/gsoc/git/d3js/src/Graph.tsx\";\nimport React from 'react';\nimport { ResponsiveNetwork } from '@nivo/network';\nimport { animated, to } from '@react-spring/web';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Graph = props => {\n  const CustomNodeComponent = _ref => {\n    let {\n      node,\n      animated: animatedProps,\n      onClick,\n      onMouseEnter,\n      onMouseMove,\n      onMouseLeave\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(animated.circle, {\n      \"data-testid\": `node.${node.id}`,\n      transform: to([animatedProps.x, animatedProps.y, animatedProps.scale], (x, y, scale) => {\n        return `translate(${x},${y}) scale(${scale})`;\n      }),\n      r: to([animatedProps.size], size => size / 2),\n      fill: animatedProps.color,\n      strokeWidth: animatedProps.borderWidth,\n      stroke: animatedProps.borderColor,\n      opacity: animatedProps.opacity,\n      onClick: onClick ? event => onClick(node, event) : undefined,\n      onMouseEnter: onMouseEnter ? event => onMouseEnter(node, event) : undefined,\n      onMouseMove: onMouseMove ? event => onMouseMove(node, event) : undefined,\n      onMouseLeave: onMouseLeave ? event => onMouseLeave(node, event) : undefined\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this);\n  };\n  const chartProperties = {\n    data: props.data,\n    height: 1000,\n    width: 1000,\n    repulsivity: 200,\n    iterations: 120,\n    centeringStrength: 0.1,\n    nodeBorderWidth: 5,\n    nodeColor: node => node.color,\n    linkThickness: 2,\n    linkColor: {\n      from: 'source.color',\n      modifiers: []\n    },\n    linkDistance: node => node.distance,\n    nodeSize: node => node.size,\n    activeNodeSize: node => node.size * 1.5,\n    inactiveNodeSize: node => node.size / 1.5,\n    isInteractive: true,\n    onClick: node => props.fetchData(node.data.artist_mbid)\n  };\n  return props.data ? /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '1000px'\n    },\n    children: /*#__PURE__*/_jsxDEV(ResponsiveNetwork, {\n      ...chartProperties,\n      nodeComponent: CustomNodeComponent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Please wait...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n_c = Graph;\nexport default Graph;\nvar _c;\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"names":["React","ResponsiveNetwork","animated","to","jsxDEV","_jsxDEV","Graph","props","CustomNodeComponent","_ref","node","animatedProps","onClick","onMouseEnter","onMouseMove","onMouseLeave","circle","id","transform","x","y","scale","r","size","fill","color","strokeWidth","borderWidth","stroke","borderColor","opacity","event","undefined","fileName","_jsxFileName","lineNumber","columnNumber","chartProperties","data","height","width","repulsivity","iterations","centeringStrength","nodeBorderWidth","nodeColor","linkThickness","linkColor","from","modifiers","linkDistance","distance","nodeSize","activeNodeSize","inactiveNodeSize","isInteractive","fetchData","artist_mbid","style","children","nodeComponent","_c","$RefreshReg$"],"sources":["/gsoc/git/d3js/src/Graph.tsx"],"sourcesContent":["import React, {useState} from 'react';\nimport { ResponsiveNetwork, NodeProps, LinkProps, NodeTooltipProps, NetworkSvgProps } from '@nivo/network';\nimport { animated, to } from '@react-spring/web';\nimport { InputNode } from '@nivo/network/dist/types';\ninterface GraphProps {\n    data: any;\n    fetchData: Function;\n}\n\nconst Graph = (props: GraphProps) => {\n    type Node = (typeof props.data)['nodes'][number];\n    type Link = (typeof props.data)['links'][number];\n    \n    const CustomNodeComponent = <Node extends InputNode>({\n        node,\n        animated: animatedProps,\n        onClick,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n    }: NodeProps<Node>) => (\n        <animated.circle\n            data-testid={`node.${node.id}`}\n            transform={to([animatedProps.x, animatedProps.y, animatedProps.scale], (x, y, scale) => {\n                return `translate(${x},${y}) scale(${scale})`\n            })}\n            r={to([animatedProps.size], size => size / 2)}\n            fill={animatedProps.color}\n            strokeWidth={animatedProps.borderWidth}\n            stroke={animatedProps.borderColor}\n            opacity={animatedProps.opacity}\n            onClick={onClick ? event => onClick(node, event) : undefined}\n            onMouseEnter={onMouseEnter ? event => onMouseEnter(node, event) : undefined}\n            onMouseMove={onMouseMove ? event => onMouseMove(node, event) : undefined}\n            onMouseLeave={onMouseLeave ? event => onMouseLeave(node, event) : undefined}\n        />\n    )\n    \n\n    const chartProperties: NetworkSvgProps<Node, Link> = {\n        data: props.data,\n        height: 1000,\n        width: 1000,\n        repulsivity: 200,\n        iterations: 120,\n        centeringStrength: 0.1,\n        nodeBorderWidth: 5,\n        nodeColor: node => node.color,\n        linkThickness: 2,\n        linkColor: { from: 'source.color', modifiers: [] },\n        linkDistance: node => node.distance,\n        nodeSize: node => node.size,\n        activeNodeSize: node => node.size * 1.5,\n        inactiveNodeSize: node => node.size / 1.5,\n        isInteractive: true,\n        onClick: node => props.fetchData(node.data.artist_mbid)\n    }\n    \n    return (\n        props.data ?\n        <div style={{ height: '1000px' }}>\n            <ResponsiveNetwork\n                {...chartProperties}\n                nodeComponent={CustomNodeComponent}\n            />\n        </div>\n        :\n        <p>\n            Please wait...\n        </p>\n    );\n}\nexport default Graph;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}