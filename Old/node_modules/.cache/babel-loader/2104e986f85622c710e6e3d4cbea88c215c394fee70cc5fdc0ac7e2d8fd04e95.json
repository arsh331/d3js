{"ast":null,"code":"var _jsxFileName = \"/gsoc/git/d3js/src/Data.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Data = () => {\n  _s();\n  const artist_mbid = \"ef2686fe-0bdf-4e0c-b902-cc6609acc95d\";\n  const url = \"https://labs.api.listenbrainz.org/similar-artists/json?algorithm=session_based_days_7500_session_300_contribution_5_threshold_10_limit_100_filter_True_skip_30&artist_mbid=ef2686fe-0bdf-4e0c-b902-cc6609acc95d\";\n  const [similarArtists, setSimilarArtists] = useState([]);\n  const [artist, setArtist] = useState(\"\");\n  const fetchData = () => {\n    fetch(url).then(response => response.json()).then(data => setData(data));\n  };\n  const setData = data => {\n    setArtist(data[1]);\n    setSimilarArtists(data[3]);\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const artistList = similarArtists.data && similarArtists.data.map(artist => artist.name);\n  const getArtists = () => {\n    const transformedArtists = {\n      \"nodes\": artistList.map(artist => {\n        return {\n          \"id\": artist\n        };\n      }),\n      \"links\": artistList.map(artist => {\n        return {\n          \"source\": \"Shubh\",\n          \"target\": artist\n        };\n      })\n    };\n    console.log(transformedArtists);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Similar Artists\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: artistList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getArtists,\n      children: \"Get artists\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(Data, \"QGC6pfeN9kngUkSusChZ+5ra1A8=\");\n_c = Data;\nexport default Data;\nvar _c;\n$RefreshReg$(_c, \"Data\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Data","_s","artist_mbid","url","similarArtists","setSimilarArtists","artist","setArtist","fetchData","fetch","then","response","json","data","setData","artistList","map","name","getArtists","transformedArtists","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/gsoc/git/d3js/src/Data.js"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\n\nconst Data = () => {\n    const artist_mbid = \"ef2686fe-0bdf-4e0c-b902-cc6609acc95d\";\n    const url = \"https://labs.api.listenbrainz.org/similar-artists/json?algorithm=session_based_days_7500_session_300_contribution_5_threshold_10_limit_100_filter_True_skip_30&artist_mbid=ef2686fe-0bdf-4e0c-b902-cc6609acc95d\";\n    const [similarArtists, setSimilarArtists] = useState([]);\n    const [artist, setArtist] = useState(\"\");\n    const fetchData = () => {\n        fetch(url)\n        .then((response) => response.json())\n        .then((data) => setData(data))   \n    }\n    \n    const setData = (data) => {\n        setArtist(data[1]);\n        setSimilarArtists(data[3]);\n    }\n    \n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    const artistList = similarArtists.data && (similarArtists.data.map((artist) => artist.name));\n    \n    const getArtists = () => {\n        const transformedArtists = {\n            \"nodes\": artistList.map((artist) => {\n                return{\n                    \"id\": artist,\n                };\n            }),\n            \"links\": artistList.map((artist) => {\n                return{\n                    \"source\": \"Shubh\",\n                    \"target\": artist\n                };\n            }),\n        }\n        console.log(transformedArtists);\n    }\n\n    return (\n        <div>\n            <h1>Similar Artists</h1>\n            <div>{artistList}</div>\n            <br />\n            <button onClick={getArtists}>Get artists</button>\n        </div>\n    );\n}\n\nexport default Data;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAMC,WAAW,GAAG,sCAAsC;EAC1D,MAAMC,GAAG,GAAG,iNAAiN;EAC7N,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAMY,SAAS,GAAGA,CAAA,KAAM;IACpBC,KAAK,CAACN,GAAG,CAAC,CACTO,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAKC,OAAO,CAACD,IAAI,CAAC,CAAC;EAClC,CAAC;EAED,MAAMC,OAAO,GAAID,IAAI,IAAK;IACtBN,SAAS,CAACM,IAAI,CAAC,CAAC,CAAC,CAAC;IAClBR,iBAAiB,CAACQ,IAAI,CAAC,CAAC,CAAC,CAAC;EAC9B,CAAC;EAEDhB,SAAS,CAAC,MAAM;IACZW,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,UAAU,GAAGX,cAAc,CAACS,IAAI,IAAKT,cAAc,CAACS,IAAI,CAACG,GAAG,CAAEV,MAAM,IAAKA,MAAM,CAACW,IAAI,CAAE;EAE5F,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACrB,MAAMC,kBAAkB,GAAG;MACvB,OAAO,EAAEJ,UAAU,CAACC,GAAG,CAAEV,MAAM,IAAK;QAChC,OAAM;UACF,IAAI,EAAEA;QACV,CAAC;MACL,CAAC,CAAC;MACF,OAAO,EAAES,UAAU,CAACC,GAAG,CAAEV,MAAM,IAAK;QAChC,OAAM;UACF,QAAQ,EAAE,OAAO;UACjB,QAAQ,EAAEA;QACd,CAAC;MACL,CAAC;IACL,CAAC;IACDc,OAAO,CAACC,GAAG,CAACF,kBAAkB,CAAC;EACnC,CAAC;EAED,oBACIpB,OAAA;IAAAuB,QAAA,gBACIvB,OAAA;MAAAuB,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxB3B,OAAA;MAAAuB,QAAA,EAAMP;IAAU;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACvB3B,OAAA;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACN3B,OAAA;MAAQ4B,OAAO,EAAET,UAAW;MAAAI,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChD,CAAC;AAEd,CAAC;AAAAzB,EAAA,CA/CKD,IAAI;AAAA4B,EAAA,GAAJ5B,IAAI;AAiDV,eAAeA,IAAI;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}